{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/linear-gauge-animation/linear-gauge-animation.component.ts","content":"import { AfterViewInit, Component, ViewChild } from \"@angular/core\";\r\n\r\nimport { IgxLinearGaugeComponent } from \"igniteui-angular-gauges\";\r\nimport { IgxLinearGraphRangeComponent } from \"igniteui-angular-gauges\";\r\nimport { LinearGraphNeedleShape } from \"igniteui-angular-gauges\";\r\n\r\n@Component({\r\n  selector: \"app-linear-gauge-animation\",\r\n  styleUrls: [ \"./linear-gauge-animation.component.scss\"],\r\n  templateUrl: \"./linear-gauge-animation.component.html\"\r\n})\r\n\r\nexport class LinearGaugeAnimationComponent implements AfterViewInit {\r\n\r\n    @ViewChild(\"linearGauge\", { static: true })\r\n    public linearGauge: IgxLinearGaugeComponent;\r\n\r\n    public ngAfterViewInit(): void {\r\n\r\n        // enabling animation duration (in milliseconds)\r\n        this.linearGauge.transitionDuration = 500;\r\n        this.AnimateToGauge3();\r\n    }\r\n\r\n    public AnimateToGauge3(): void {\r\n        // linear gauge requires settings for these properties:\r\n        this.linearGauge.minimumValue = 0;\r\n        this.linearGauge.maximumValue = 100;\r\n        this.linearGauge.value = 50;\r\n        this.linearGauge.interval = 10;\r\n\r\n        // setting custom appearance of labels\r\n        this.linearGauge.labelInterval = 10;\r\n        this.linearGauge.labelExtent = 0.05;\r\n\r\n        // setting custom appearance of needle\r\n        this.linearGauge.isNeedleDraggingEnabled = true;\r\n        this.linearGauge.needleShape = LinearGraphNeedleShape.Needle;\r\n        this.linearGauge.needleBrush = \"#79797a\";\r\n        this.linearGauge.needleOutline = \"#ffffffff\";\r\n        this.linearGauge.needleStrokeThickness = 1;\r\n        this.linearGauge.needleOuterExtent = 0.9;\r\n        this.linearGauge.needleInnerExtent = 0.3;\r\n\r\n        // setting custom appearance of major/minor ticks\r\n        this.linearGauge.minorTickCount = 5;\r\n        this.linearGauge.minorTickEndExtent = 0.10;\r\n        this.linearGauge.minorTickStartExtent = 0.20;\r\n        this.linearGauge.minorTickStrokeThickness = 1;\r\n        this.linearGauge.tickStartExtent = 0.25;\r\n        this.linearGauge.tickEndExtent = 0.05;\r\n        this.linearGauge.tickStrokeThickness = 2;\r\n\r\n        // setting custom gauge ranges\r\n        const range1 = new IgxLinearGraphRangeComponent();\r\n        range1.startValue = 0;\r\n        range1.endValue = 30;\r\n        const range2 = new IgxLinearGraphRangeComponent();\r\n        range2.startValue = 30;\r\n        range2.endValue = 70;\r\n        const range3 = new IgxLinearGraphRangeComponent();\r\n        range3.startValue = 70;\r\n        range3.endValue = 100;\r\n\r\n        this.linearGauge.rangeBrushes  = [ \"#9FB328\", \"#438C47\", \"#3F51B5\"];\r\n        this.linearGauge.rangeOutlines = [ \"#9FB328\", \"#438C47\", \"#3F51B5\"];\r\n        this.linearGauge.ranges.clear();\r\n        this.linearGauge.ranges.add(range1);\r\n        this.linearGauge.ranges.add(range2);\r\n        this.linearGauge.ranges.add(range3);\r\n\r\n        // setting extent of all gauge ranges\r\n        for (let i = 0; i < this.linearGauge.ranges.count; i++) {\r\n            const range = this.linearGauge.ranges.item(i);\r\n            range.innerStartExtent = 0.075;\r\n            range.innerEndExtent = 0.075;\r\n            range.outerStartExtent = 0.65;\r\n            range.outerEndExtent = 0.65;\r\n        }\r\n\r\n        // setting extent of gauge scale\r\n        this.linearGauge.scaleStrokeThickness = 0;\r\n        this.linearGauge.scaleBrush = \"#ffffff\";\r\n        this.linearGauge.scaleOutline = \"#dbdbdb\";\r\n        this.linearGauge.scaleInnerExtent = 0.075;\r\n        this.linearGauge.scaleOuterExtent = 0.85;\r\n        this.linearGauge.scaleStartExtent = 0.05;\r\n        this.linearGauge.scaleEndExtent = 0.95;\r\n\r\n        // setting appearance of backing fill and outline\r\n        this.linearGauge.backingBrush = \"#ffffff\";\r\n        this.linearGauge.backingOutline = \"#d1d1d1\";\r\n        this.linearGauge.backingStrokeThickness = 0;\r\n    }\r\n\r\n    public AnimateToGauge2(): void {\r\n           // linear gauge requires settings for these properties:\r\n           this.linearGauge.minimumValue = 100;\r\n           this.linearGauge.maximumValue = 200;\r\n           this.linearGauge.value = 150;\r\n           this.linearGauge.interval = 20;\r\n\r\n           // setting custom appearance of labels\r\n           this.linearGauge.labelInterval = 20;\r\n           this.linearGauge.labelExtent = 0.05;\r\n\r\n           // setting custom appearance of needle\r\n           this.linearGauge.isNeedleDraggingEnabled = true;\r\n           this.linearGauge.needleShape = LinearGraphNeedleShape.Triangle;\r\n           this.linearGauge.needleBrush = \"#79797a\";\r\n           this.linearGauge.needleOutline = \"#ffffffff\";\r\n           this.linearGauge.needleStrokeThickness = 1;\r\n           this.linearGauge.needleOuterExtent = 0.9;\r\n           this.linearGauge.needleInnerExtent = 0.3;\r\n\r\n           // setting custom appearance of major/minor ticks\r\n           this.linearGauge.minorTickCount = 4;\r\n           this.linearGauge.minorTickEndExtent = 0.10;\r\n           this.linearGauge.minorTickStartExtent = 0.20;\r\n           this.linearGauge.minorTickStrokeThickness = 1;\r\n           this.linearGauge.tickStartExtent = 0.25;\r\n           this.linearGauge.tickEndExtent = 0.05;\r\n           this.linearGauge.tickStrokeThickness = 2;\r\n\r\n           // setting custom gauge ranges\r\n           const range1 = new IgxLinearGraphRangeComponent();\r\n           range1.startValue = 100;\r\n           range1.endValue = 125;\r\n           const range2 = new IgxLinearGraphRangeComponent();\r\n           range2.startValue = 125;\r\n           range2.endValue = 150;\r\n           const range3 = new IgxLinearGraphRangeComponent();\r\n           range3.startValue = 150;\r\n           range3.endValue = 175;\r\n           const range4 = new IgxLinearGraphRangeComponent();\r\n           range4.startValue = 175;\r\n           range4.endValue = 200;\r\n\r\n           this.linearGauge.rangeBrushes  = [ \"#0078C8\", \"#0099FF\", \"#21A7FF\", \"#4FB9FF\"];\r\n           this.linearGauge.rangeOutlines = [ \"#0078C8\", \"#0099FF\", \"#21A7FF\", \"#4FB9FF\"];\r\n           this.linearGauge.ranges.clear();\r\n           this.linearGauge.ranges.add(range1);\r\n           this.linearGauge.ranges.add(range2);\r\n           this.linearGauge.ranges.add(range3);\r\n           this.linearGauge.ranges.add(range4);\r\n\r\n           // setting extent of all gauge ranges\r\n           for (let i = 0; i < this.linearGauge.ranges.count; i++) {\r\n               const range = this.linearGauge.ranges.item(i);\r\n               range.innerStartExtent = 0.075;\r\n               range.innerEndExtent = 0.075;\r\n               range.outerStartExtent = 0.65;\r\n               range.outerEndExtent = 0.65;\r\n           }\r\n\r\n           // setting extent of gauge scale\r\n           this.linearGauge.scaleStrokeThickness = 0;\r\n           this.linearGauge.scaleBrush = \"#ffffff\";\r\n           this.linearGauge.scaleOutline = \"#dbdbdb\";\r\n           this.linearGauge.scaleInnerExtent = 0.075;\r\n           this.linearGauge.scaleOuterExtent = 0.85;\r\n           this.linearGauge.scaleStartExtent = 0.05;\r\n           this.linearGauge.scaleEndExtent = 0.95;\r\n\r\n           // setting appearance of backing fill and outline\r\n           this.linearGauge.backingBrush = \"#ffffff\";\r\n           this.linearGauge.backingOutline = \"#d1d1d1\";\r\n           this.linearGauge.backingStrokeThickness = 0;\r\n    }\r\n\r\n    public AnimateToGauge1(): void {\r\n        // linear gauge requires settings for these properties:\r\n        this.linearGauge.minimumValue = 0;\r\n        this.linearGauge.maximumValue = 80;\r\n        this.linearGauge.value = 60;\r\n        this.linearGauge.interval = 20;\r\n\r\n        // setting custom appearance of labels\r\n        this.linearGauge.labelInterval = 20;\r\n        this.linearGauge.labelExtent = 0.05;\r\n\r\n        // setting custom appearance of needle\r\n        this.linearGauge.isNeedleDraggingEnabled = true;\r\n        this.linearGauge.needleShape = LinearGraphNeedleShape.Trapezoid;\r\n        this.linearGauge.needleBrush = \"#79797a\";\r\n        this.linearGauge.needleOutline = \"#ffffffff\";\r\n        this.linearGauge.needleStrokeThickness = 1;\r\n        this.linearGauge.needleOuterExtent = 0.9;\r\n        this.linearGauge.needleInnerExtent = 0.3;\r\n\r\n        // setting custom appearance of major/minor ticks\r\n        this.linearGauge.minorTickCount = 5;\r\n        this.linearGauge.minorTickEndExtent = 0.10;\r\n        this.linearGauge.minorTickStartExtent = 0.20;\r\n        this.linearGauge.minorTickStrokeThickness = 1;\r\n        this.linearGauge.tickStartExtent = 0.25;\r\n        this.linearGauge.tickEndExtent = 0.05;\r\n        this.linearGauge.tickStrokeThickness = 2;\r\n\r\n        // setting custom gauge ranges\r\n        const range1 = new IgxLinearGraphRangeComponent();\r\n        range1.startValue = 0;\r\n        range1.endValue = 40;\r\n        const range2 = new IgxLinearGraphRangeComponent();\r\n        range2.startValue = 40;\r\n        range2.endValue = 80;\r\n\r\n        this.linearGauge.rangeBrushes  = [ \"#a4bd29\", \"#F86232\" ];\r\n        this.linearGauge.rangeOutlines = [ \"#a4bd29\", \"#F86232\" ];\r\n        this.linearGauge.ranges.clear();\r\n        this.linearGauge.ranges.add(range1);\r\n        this.linearGauge.ranges.add(range2);\r\n\r\n        // setting extent of all gauge ranges\r\n        for (let i = 0; i < this.linearGauge.ranges.count; i++) {\r\n            const range = this.linearGauge.ranges.item(i);\r\n            range.innerStartExtent = 0.075;\r\n            range.innerEndExtent = 0.075;\r\n            range.outerStartExtent = 0.65;\r\n            range.outerEndExtent = 0.65;\r\n        }\r\n\r\n        // setting extent of gauge scale\r\n        this.linearGauge.scaleStrokeThickness = 0;\r\n        this.linearGauge.scaleBrush = \"#ffffff\";\r\n        this.linearGauge.scaleOutline = \"#dbdbdb\";\r\n        this.linearGauge.scaleInnerExtent = 0.075;\r\n        this.linearGauge.scaleOuterExtent = 0.85;\r\n        this.linearGauge.scaleStartExtent = 0.05;\r\n        this.linearGauge.scaleEndExtent = 0.95;\r\n\r\n        // setting appearance of backing fill and outline\r\n        this.linearGauge.backingBrush = \"#ffffff\";\r\n        this.linearGauge.backingOutline = \"#d1d1d1\";\r\n        this.linearGauge.backingStrokeThickness = 0;\r\n    }\r\n\r\n}\r\n","isMain":true,"fileExtension":"ts","fileHeader":"ts"},{"hasRelativeAssetsUrls":false,"path":"src/app/linear-gauge-animation/linear-gauge-animation.component.html","content":"<div class=\"container sample\">\r\n    <div class=\"options horizontal\">\r\n        <button (click)=\"AnimateToGauge1()\"\r\n                class=\"options-button\">Animation #1</button>\r\n        <button (click)=\"AnimateToGauge2()\"\r\n                class=\"options-button\">Animation #2</button>\r\n        <button (click)=\"AnimateToGauge3()\"\r\n                class=\"options-button\">Animation #3</button>\r\n    </div>\r\n\r\n    <div class=\"container\" >\r\n\r\n        <!-- Note the linear gauge requires settings only for\r\n        minimumValue, maximumValue, and value properties.\r\n        All other properties are optional and listed here\r\n        for demonstration purpose only -->\r\n        <igx-linear-gauge\r\n            #linearGauge\r\n            height=\"80px\"\r\n            width=\"400px\"\r\n            minimumValue=0\r\n            maximumValue=100\r\n            value=50\r\n            interval=10\r\n            labelInterval=10\r\n            labelExtent=0.02\r\n\r\n            minorTickEndExtent=0.10,\r\n            minorTickStartExtent=0.20,\r\n            tickStartExtent=0.25,\r\n            tickEndExtent=0.05,\r\n            tickStrokeThickness=2,\r\n\r\n            needleShape=\"Needle\"\r\n            needleBrush=\"#79797a\"\r\n            needleOutline=\"#79797a\"\r\n            scaleStrokeThickness=0\r\n            scaleBrush=\"#ffffff\"\r\n            scaleOutline=\"#d3d3d3\"\r\n            backingBrush=\"#ffffff\"\r\n            backingOutline=\"#d1d1d1\"\r\n            backingStrokeThickness=0>\r\n        </igx-linear-gauge>\r\n    </div>\r\n</div>\r\n","isMain":true,"fileExtension":"html","fileHeader":"html"},{"hasRelativeAssetsUrls":false,"path":"src/app/linear-gauge-animation/linear-gauge-animation.component.scss","content":"/* styles are loaded the Shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/\r\n","isMain":true,"fileExtension":"scss","fileHeader":"scss"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { IgxLinearGaugeModule } from \"igniteui-angular-gauges\";\r\nimport { LinearGaugeAnimationComponent } from \"./linear-gauge-animation/linear-gauge-animation.component\";\r\nimport { IgxButtonModule } from \"igniteui-angular\";\n\n\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\r\n\tAppComponent,\r\n\tLinearGaugeAnimationComponent\r\n],\n  imports: [\r\n\tBrowserModule,\r\n\tBrowserAnimationsModule,\r\n\tFormsModule,\r\n\tIgxLinearGaugeModule,\r\n\tIgxButtonModule\r\n],\n  providers: [],\n  entryComponents: [],\n  schemas: []\n})\nexport class AppModule {}\n","isMain":true,"fileExtension":"ts","fileHeader":"modules"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-linear-gauge-animation></app-linear-gauge-animation>"}],"sampleDependencies":"{\"@angular/animations\":\"10.0.14\",\"@angular/common\":\"10.0.14\",\"@angular/compiler\":\"10.0.14\",\"@angular/core\":\"^10.0.14\",\"@angular/forms\":\"10.0.14\",\"@angular/platform-browser\":\"10.0.14\",\"@angular/platform-browser-dynamic\":\"10.0.14\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.6.2\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"11.1.10\",\"igniteui-angular-core\":\"11.2.0-beta.0\",\"igniteui-angular-gauges\":\"11.2.0-beta.0\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.5.4\",\"tslib\":\"1.13.0\",\"web-animations-js\":\"^2.3.2\",\"zone.js\":\"~0.10.2\"}"}