{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/maps/geo-map-display-imagery-heat-tiles/map-display-imagery-heat-tiles.component.ts","content":"import { AfterViewInit, Component, ViewChild } from \"@angular/core\";\r\n\r\nimport { IgxHeatTileGenerator } from \"igniteui-angular-core\";\r\nimport { IgxShapeDataSource } from \"igniteui-angular-core\";\r\n\r\nimport { IgxGeographicMapComponent } from \"igniteui-angular-maps\";\r\nimport { IgxGeographicTileSeriesComponent } from \"igniteui-angular-maps\";\r\nimport { IgxTileGeneratorMapImagery } from \"igniteui-angular-maps\";\r\n\r\n@Component({\r\n    selector: \"app-map-display-imagery-heat-tiles\",\r\n    templateUrl: \"./map-display-imagery-heat-tiles.component.html\",\r\n    styleUrls: [\"./map-display-imagery-heat-tiles.component.scss\"]\r\n})\r\nexport class MapDisplayImageryHeatTilesComponent implements AfterViewInit {\r\n\r\n    @ViewChild(\"map\", { static: true })\r\n    public map: IgxGeographicMapComponent;\r\n    public tileImagery: IgxTileGeneratorMapImagery;\r\n\r\n    constructor() {\r\n        this.tileImagery = new IgxTileGeneratorMapImagery();\r\n\r\n        const sds: IgxShapeDataSource = new IgxShapeDataSource();\r\n        sds.importCompleted.subscribe((s, e) => {\r\n            const data = sds.getPointData();\r\n            const lat: number[] = [];\r\n            const lon: number[] = [];\r\n            const val: number[] = [];\r\n\r\n            for (let i = 0; i < data.length; i++) {\r\n                const item = data[i];\r\n                for (let j = 0; j < item.points.length; j++) {\r\n                    const pointsList = item.points[j];\r\n                    for (let k = 0; k < pointsList.length; k++) {\r\n                        lat.push(pointsList[k].y);\r\n                        lon.push(pointsList[k].x);\r\n                    }\r\n                }\r\n                const value = parseInt(item.fieldValues[\"POP2010\"], 10);\r\n                if (value >= 0) {\r\n                    val.push(value);\r\n                } else {\r\n                    val.push(0);\r\n                }\r\n            }\r\n\r\n            // generating heat map imagery tiles\r\n            const gen = new IgxHeatTileGenerator();\r\n            gen.xValues = lon;\r\n            gen.yValues = lat;\r\n            gen.values = val;\r\n            gen.blurRadius = 6;\r\n            gen.maxBlurRadius = 20;\r\n            gen.useBlurRadiusAdjustedForZoom = true;\r\n            gen.minimumColor = \"rgba(100, 255, 0, 0.5)\";\r\n            gen.maximumColor = \"rgba(255, 255, 0, 0.5)\";\r\n            gen.useGlobalMinMax = true;\r\n            gen.useGlobalMinMaxAdjustedForZoom = true;\r\n            gen.useLogarithmicScale = true;\r\n            gen.useWebWorkers = true;\r\n            // gen.webWorkerInstance = new Worker();\r\n            gen.webWorkerInstance = new Worker(\"../HeatmapWorker\", { type: \"module\" });\r\n\r\n            gen.scaleColors = [\r\n                \"rgba(0, 0, 255, .251)\", \"rgba(0, 255, 255, .3765)\",\r\n                \"rgba(50,205,50, .2675)\", \"rgba(255, 255, 0, .7059)\",\r\n                \"rgba(255, 0, 0, .7843)\"\r\n            ];\r\n            this.tileImagery.tileGenerator = gen;\r\n\r\n            // generating heat map series\r\n            const series = new IgxGeographicTileSeriesComponent();\r\n            series.name = \"heatMapSeries\";\r\n            series.tileImagery = this.tileImagery;\r\n\r\n            // add heat map series to the map\r\n            this.map.series.add(series);\r\n        });\r\n\r\n        sds.shapefileSource = \"https://static.infragistics.com/xplatform/shapes/AmericanCities.shp\";\r\n        sds.databaseSource  = \"https://static.infragistics.com/xplatform/shapes/AmericanCities.dbf\";\r\n        sds.dataBind();\r\n    }\r\n\r\n    public ngAfterViewInit(): void {\r\n        this.map.zoomToGeographic({ left: -134.5, top: 16.0, width: 70.0, height: 37.0 });\r\n    }\r\n}\r\n","isMain":true,"fileExtension":"ts","fileHeader":"ts"},{"hasRelativeAssetsUrls":false,"path":"src/app/maps/geo-map-display-imagery-heat-tiles/map-display-imagery-heat-tiles.component.html","content":"<div class=\"container sample\">\r\n    <igx-geographic-map #map width=\"100%\" height=\"100%\">\r\n    </igx-geographic-map>\r\n</div>\r\n","isMain":true,"fileExtension":"html","fileHeader":"html"},{"hasRelativeAssetsUrls":false,"path":"src/app/maps/geo-map-display-imagery-heat-tiles/map-display-imagery-heat-tiles.component.scss","content":"/* styles are loaded the Shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/\r\n","isMain":true,"fileExtension":"scss","fileHeader":"scss"},{"hasRelativeAssetsUrls":false,"path":"src/app/maps/HeatmapWorker.ts","content":"import { HeatTileGeneratorWebWorker } from \"igniteui-angular-core/esm5/lib/HeatTileGeneratorWebWorker\";\r\n\r\nconst worker: Worker = self as any;\r\n\r\nworker.onmessage = HeatTileGeneratorWebWorker.onmessage;\r\nHeatTileGeneratorWebWorker.postmessage = heatWorkerPostMessage;\r\n\r\nfunction heatWorkerPostMessage() {\r\n  (self as any).postMessage.apply(self, Array.prototype.slice.call(arguments));\r\n}\r\n\r\nHeatTileGeneratorWebWorker.start();\r\n\r\nexport default {} as typeof Worker & (new () => Worker);\r\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { MapDisplayImageryHeatTilesComponent } from \"./maps/geo-map-display-imagery-heat-tiles/map-display-imagery-heat-tiles.component\";\r\nimport { IgxGeographicMapModule } from \"igniteui-angular-maps\";\n\n\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\r\n\tAppComponent,\r\n\tMapDisplayImageryHeatTilesComponent\r\n],\n  imports: [\r\n\tBrowserModule,\r\n\tBrowserAnimationsModule,\r\n\tFormsModule,\r\n\tIgxGeographicMapModule\r\n],\n  providers: [],\n  entryComponents: [],\n  schemas: []\n})\nexport class AppModule {}\n","isMain":true,"fileExtension":"ts","fileHeader":"modules"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-map-display-imagery-heat-tiles></app-map-display-imagery-heat-tiles>"}],"sampleDependencies":"{\"@angular/animations\":\"10.0.14\",\"@angular/common\":\"10.0.14\",\"@angular/compiler\":\"10.0.14\",\"@angular/core\":\"^10.0.14\",\"@angular/forms\":\"10.0.14\",\"@angular/platform-browser\":\"10.0.14\",\"@angular/platform-browser-dynamic\":\"10.0.14\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.6.2\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"11.1.10\",\"igniteui-angular-charts\":\"11.2.0-beta.0\",\"igniteui-angular-core\":\"11.2.0-beta.0\",\"igniteui-angular-maps\":\"11.2.0-beta.0\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.5.4\",\"tslib\":\"1.13.0\",\"web-animations-js\":\"^2.3.2\",\"zone.js\":\"~0.10.2\"}"}