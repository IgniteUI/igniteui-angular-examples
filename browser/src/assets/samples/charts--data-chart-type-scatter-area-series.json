{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-scatter-area-series/data-chart-type-scatter-area-series.component.ts","content":"import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { ColorScaleInterpolationMode } from \"igniteui-angular-charts\";\r\nimport { IgxCustomPaletteColorScaleComponent\r\n} from \"igniteui-angular-charts\";\r\nimport { IgxDataChartComponent } from \"igniteui-angular-charts\";\r\nimport { IgxScatterAreaSeriesComponent } from \"igniteui-angular-charts\";\r\n\r\nimport { SampleScatterData } from \"../SampleScatterData\";\r\n\r\n@Component({\r\n  selector: \"app-data-chart-type-scatter-area-series\",\r\n  styleUrls: [\"./data-chart-type-scatter-area-series.component.scss\"],\r\n  templateUrl: \"./data-chart-type-scatter-area-series.component.html\"\r\n})\r\nexport class DataChartTypeScatterAreaSeriesComponent implements OnInit {\r\n\r\n    @ViewChild(\"chart\", { static: true })\r\n    public chart: IgxDataChartComponent;\r\n    @ViewChild(\"series\", { static: true })\r\n    public series: IgxScatterAreaSeriesComponent;\r\n\r\n    public data: any[];\r\n    public colorScale: IgxCustomPaletteColorScaleComponent;\r\n    public seriesScaleMode: string;\r\n    public seriesScaleMin: number;\r\n    public seriesScaleMax: number;\r\n\r\n    constructor() {\r\n        this.data = SampleScatterData.create();\r\n\r\n        this.seriesScaleMax = 2;\r\n        this.seriesScaleMin = -2;\r\n        this.seriesScaleMode = \"InterpolateHSV\";\r\n     }\r\n\r\n    public ngOnInit() {\r\n\r\n        this.colorScale = new IgxCustomPaletteColorScaleComponent();\r\n        this.colorScale.interpolationMode = ColorScaleInterpolationMode.InterpolateHSV;\r\n        this.colorScale.minimumValue = -2;\r\n        this.colorScale.maximumValue = 2;\r\n        this.colorScale.palette = [\r\n            \"#8670CB\", \"#513E8C\", \"#003F5E\",\r\n            \"#0C6B99\", \"#4AC4FF\", \"#B5CC2E\",\r\n            \"#FFD034\", \"#FC8612\", \"#ED4840\"\r\n        ];\r\n\r\n        this.series.colorScale = this.colorScale;\r\n    }\r\n\r\n    public seriesScaleMinChanged(e: any) {\r\n        const num: number = e.target.value.toString();\r\n        this.colorScale.minimumValue = num;\r\n        this.seriesScaleMin = num;\r\n    }\r\n    public seriesScaleMaxChanged(e: any) {\r\n        const num: number = e.target.value.toString();\r\n        this.colorScale.maximumValue = num;\r\n        this.seriesScaleMax = num;\r\n    }\r\n    public seriesScaleModeChanged(e: any) {\r\n        const mode = e.target.value.toString();\r\n        this.colorScale.interpolationMode = mode;\r\n        this.seriesScaleMode = mode;\r\n    }\r\n}\r\n","isMain":true,"fileExtension":"ts","fileHeader":"ts"},{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-scatter-area-series/data-chart-type-scatter-area-series.component.html","content":"<div class=\"container sample\">\r\n    <div class=\"options horizontal\">\r\n        <span class=\"options-label\">Scale Mode: </span>\r\n        <select value={{seriesScaleMode}}\r\n            (change)=\"this.seriesScaleModeChanged($event)\">\r\n            <option>Select</option>\r\n            <option>InterpolateRGB</option>\r\n            <option>InterpolateHSV</option>\r\n        </select>\r\n        <label class=\"options-label\">Minimum: </label>\r\n        <label class=\"optionValue\" >\r\n            {{seriesScaleMin}}\r\n        </label>\r\n        <input class=\"slider\" type=\"range\" min=\"-5\" max=\"0\" step=\"1\"\r\n            value={{seriesScaleMin}}\r\n            (change)=\"this.seriesScaleMinChanged($event)\"/>\r\n\r\n        <label class=\"options-label\">Maximum: </label>\r\n        <label class=\"optionValue\" >\r\n            {{seriesScaleMax}}\r\n        </label>\r\n        <input class=\"slider\" type=\"range\" min=\"0\" max=\"5\" step=\"1\"\r\n            value={{seriesScaleMax}}\r\n            (change)=\"this.seriesScaleMaxChanged($event)\"/>\r\n\r\n    </div>\r\n    <div class=\"options vertical\" >\r\n        <label id=\"legendTitle\">Magnetic Field Distribution </label>\r\n    </div>\r\n    <div class=\"container\">\r\n        <igx-data-chart #chart\r\n            isHorizontalZoomEnabled=\"true\"\r\n            isVerticalZoomEnabled=\"true\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            gridMode=\"BeforeSeries\"\r\n            [dataSource]=\"data\">\r\n            <igx-numeric-x-axis #xAxis1\r\n                name=\"xAxis1\" labelLocation=\"OutsideLeft\"\r\n                minimumValue=\"-180\" maximumValue=\"180\" title=\"Longitude\">\r\n            </igx-numeric-x-axis>\r\n            <igx-numeric-y-axis #yAxis1\r\n                name=\"yAxis1\" labelLocation=\"OutsideBottom\"\r\n                minimumValue=\"-90\" maximumValue=\"90\" title=\"Latitude\">\r\n            </igx-numeric-y-axis>\r\n            <igx-numeric-x-axis #xAxis2\r\n                name=\"xAxis2\" labelLocation=\"OutsideTop\"\r\n                minimumValue=\"-180\" maximumValue=\"180\">\r\n            </igx-numeric-x-axis>\r\n            <igx-numeric-y-axis #yAxis2\r\n                name=\"yAxis2\" labelLocation=\"OutsideRight\"\r\n                minimumValue=\"-90\" maximumValue=\"90\" title=\"Latitude\">\r\n            </igx-numeric-y-axis>\r\n\r\n            <igx-scatter-area-series #series\r\n                name=\"series\"\r\n                [xAxis]=xAxis1\r\n                [yAxis]=yAxis1\r\n                xMemberPath=\"X\"\r\n                yMemberPath=\"Y\"\r\n                colorMemberPath=\"Z\">\r\n            </igx-scatter-area-series>\r\n       </igx-data-chart>\r\n    </div>\r\n</div>\r\n","isMain":true,"fileExtension":"html","fileHeader":"html"},{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-scatter-area-series/data-chart-type-scatter-area-series.component.scss","content":"/* styles are loaded the Shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/\r\n","isMain":true,"fileExtension":"scss","fileHeader":"scss"},{"hasRelativeAssetsUrls":false,"path":"src/app/SampleScatterData.ts","content":"import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class SampleScatterData {\r\n\r\n    public static create(): any[] {\r\n\r\n        const data: any[] = [];\r\n        const xMin = -180;\r\n        const xMax = 180;\r\n        const yMin = -90;\r\n        const yMax = 90;\r\n        const xCount = 11;\r\n        const yCount = 11;\r\n\r\n        const xStep = (xMax - xMin) / (xCount - 1);\r\n        const yStep = (yMax - yMin) / (yCount - 1);\r\n        let index = 0;\r\n        for (let x = xMin; x <= xMax; x += xStep) {\r\n            for (let y = yMin; y <= yMax; y += yStep) {\r\n                const z = Math.cos(x) + Math.cos(y);\r\n                data.push({ X: x, Y: y, Z: z, Index: index++ });\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    public static createWaveData(): any[] {\r\n        const data: any[] = [];\r\n        let index = 0;\r\n        for (let angle = 0; angle <= 360; angle += 10) {\r\n            const radians = angle * Math.PI / 180;\r\n            const sin = Math.sin(radians);\r\n            const cos = Math.cos(radians);\r\n            data.push({ Angle: angle, Radians: radians, SinValue: sin, CosValue: cos, Index: index++ });\r\n        }\r\n        return data;\r\n    }\r\n}\r\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { DataChartTypeScatterAreaSeriesComponent } from \"./data-chart-type-scatter-area-series/data-chart-type-scatter-area-series.component\";\r\nimport { \r\n\tIgxDataChartCoreModule,\r\n\tIgxDataChartScatterModule,\r\n\tIgxDataChartScatterCoreModule,\r\n\tIgxLegendModule,\r\n\tIgxDataChartInteractivityModule,\r\n\tIgxScatterAreaSeriesModule\r\n } from \"igniteui-angular-charts\";\r\nimport { SampleScatterData } from \"./SampleScatterData\";\n\n\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\r\n\tAppComponent,\r\n\tDataChartTypeScatterAreaSeriesComponent\r\n],\n  imports: [\r\n\tBrowserModule,\r\n\tBrowserAnimationsModule,\r\n\tFormsModule,\r\n\tIgxDataChartCoreModule,\r\n\tIgxDataChartScatterModule,\r\n\tIgxDataChartScatterCoreModule,\r\n\tIgxLegendModule,\r\n\tIgxDataChartInteractivityModule,\r\n\tIgxScatterAreaSeriesModule\r\n],\n  providers: [SampleScatterData],\n  entryComponents: [],\n  schemas: []\n})\nexport class AppModule {}\n","isMain":true,"fileExtension":"ts","fileHeader":"modules"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-data-chart-type-scatter-area-series></app-data-chart-type-scatter-area-series>"}],"sampleDependencies":"{\"@angular/animations\":\"10.0.14\",\"@angular/common\":\"10.0.14\",\"@angular/compiler\":\"10.0.14\",\"@angular/core\":\"^10.0.14\",\"@angular/forms\":\"10.0.14\",\"@angular/platform-browser\":\"10.0.14\",\"@angular/platform-browser-dynamic\":\"10.0.14\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.6.2\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"11.1.10\",\"igniteui-angular-charts\":\"11.2.0-beta.0\",\"igniteui-angular-core\":\"11.2.0-beta.0\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.5.4\",\"tslib\":\"1.13.0\",\"web-animations-js\":\"^2.3.2\",\"zone.js\":\"~0.10.2\"}"}