{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-financial-line-indicators/data-chart-type-financial-line-indicators.component.ts","content":"import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { SampleFinancialData } from \"../SampleFinancialData\";\r\n\r\nimport { IgxAbsoluteVolumeOscillatorIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxAccumulationDistributionIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxAverageDirectionalIndexIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxAverageTrueRangeIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxBollingerBandWidthIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxChaikinVolatilityIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxChaikinOscillatorIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxCommodityChannelIndexIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxDetrendedPriceOscillatorIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxEaseOfMovementIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxFastStochasticOscillatorIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxForceIndexIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxFullStochasticOscillatorIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxMarketFacilitationIndexIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxMassIndexIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxMedianPriceIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxMoneyFlowIndexIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxMovingAverageConvergenceDivergenceIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxNegativeVolumeIndexIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxOnBalanceVolumeIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxPercentagePriceOscillatorIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxPercentageVolumeOscillatorIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxPositiveVolumeIndexIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxPriceVolumeTrendIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxRateOfChangeAndMomentumIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxRelativeStrengthIndexIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxSlowStochasticOscillatorIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxStandardDeviationIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxStochRSIIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxTRIXIndicatorComponent } from \"igniteui-angular-charts\";\r\nimport { IgxCategoryXAxisComponent } from \"igniteui-angular-charts\";\r\nimport { IgxDataChartComponent } from \"igniteui-angular-charts\";\r\nimport { IgxNumericYAxisComponent } from \"igniteui-angular-charts\";\r\nimport { IndicatorDisplayType } from \"igniteui-angular-charts\";\r\n\r\n@Component({\r\n  selector: 'app-data-chart-type-financial-line-indicators',\r\n  templateUrl: './data-chart-type-financial-line-indicators.component.html',\r\n  styleUrls: ['./data-chart-type-financial-line-indicators.component.scss']\r\n})\r\nexport class DataChartTypeFinancialLineIndicatorsComponent implements OnInit {\r\n\r\n    public data: any[] = SampleFinancialData.create();\r\n    private displayType : IndicatorDisplayType = IndicatorDisplayType.Line;\r\n\r\n    @ViewChild(\"chart\", { static: true })\r\n    public chart: IgxDataChartComponent;\r\n\r\n    @ViewChild(\"xAxis2\", { static: true })\r\n    public xAxis: IgxCategoryXAxisComponent;\r\n\r\n    @ViewChild(\"yAxis3\", { static: true })\r\n    public indicatorYAxis: IgxNumericYAxisComponent;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit() {\r\n        this.switchSeries(\"AbsoluteVolumeOscillator\");\r\n    }\r\n\r\n    public onIndicatorChanged = (e: any) => {\r\n        const type = e.target.value.toString();\r\n        this.chart.series.clear();\r\n        this.switchSeries(type);\r\n    }\r\n\r\n    public switchSeries(seriesType: any) {\r\n        switch (seriesType) {\r\n            case \"AbsoluteVolumeOscillator\": {\r\n                const indicator: IgxAbsoluteVolumeOscillatorIndicatorComponent = new IgxAbsoluteVolumeOscillatorIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"AccumulationDistribution\": {\r\n                const indicator: IgxAccumulationDistributionIndicatorComponent = new IgxAccumulationDistributionIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"AverageDirectionalIndex\": {\r\n                const indicator: IgxAverageDirectionalIndexIndicatorComponent = new IgxAverageDirectionalIndexIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"AverageTrueRange\": {\r\n                const indicator: IgxAverageTrueRangeIndicatorComponent = new IgxAverageTrueRangeIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"BollingerBandWidth\": {\r\n                const indicator: IgxBollingerBandWidthIndicatorComponent = new IgxBollingerBandWidthIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"ChaikinVolatility\": {\r\n                const indicator: IgxChaikinVolatilityIndicatorComponent = new IgxChaikinVolatilityIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"ChaikinOscillator\": {\r\n                const indicator: IgxChaikinOscillatorIndicatorComponent = new IgxChaikinOscillatorIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"CommodityChannelIndex\": {\r\n                const indicator: IgxCommodityChannelIndexIndicatorComponent = new IgxCommodityChannelIndexIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"DetrendedPriceOscillator\": {\r\n                const indicator: IgxDetrendedPriceOscillatorIndicatorComponent = new IgxDetrendedPriceOscillatorIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"EaseOfMovement\": {\r\n                const indicator: IgxEaseOfMovementIndicatorComponent = new IgxEaseOfMovementIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"FastStochasticOscillator\": {\r\n                const indicator: IgxFastStochasticOscillatorIndicatorComponent = new IgxFastStochasticOscillatorIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"ForceIndex\": {\r\n                const indicator: IgxForceIndexIndicatorComponent = new IgxForceIndexIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"FullStochasticOscillator\": {\r\n                const indicator: IgxFullStochasticOscillatorIndicatorComponent = new IgxFullStochasticOscillatorIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"MarketFacilitationIndex\": {\r\n                const indicator: IgxMarketFacilitationIndexIndicatorComponent = new IgxMarketFacilitationIndexIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"MassIndex\": {\r\n                const indicator: IgxMassIndexIndicatorComponent = new IgxMassIndexIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"MedianPrice\": {\r\n                const indicator: IgxMedianPriceIndicatorComponent = new IgxMedianPriceIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"MoneyFlowIndex\": {\r\n                const indicator: IgxMoneyFlowIndexIndicatorComponent = new IgxMoneyFlowIndexIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"MovingAverageConvergenceDivergence\": {\r\n                const indicator: IgxMovingAverageConvergenceDivergenceIndicatorComponent = new IgxMovingAverageConvergenceDivergenceIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"NegativeVolumeIndex\": {\r\n                const indicator: IgxNegativeVolumeIndexIndicatorComponent = new IgxNegativeVolumeIndexIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"OnBalanceVolume\": {\r\n                const indicator: IgxOnBalanceVolumeIndicatorComponent = new IgxOnBalanceVolumeIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"PercentagePriceOscillator\": {\r\n                const indicator: IgxPercentagePriceOscillatorIndicatorComponent = new IgxPercentagePriceOscillatorIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"PercentageVolumeOscillator\": {\r\n                const indicator: IgxPercentageVolumeOscillatorIndicatorComponent = new IgxPercentageVolumeOscillatorIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"PositiveVolumeIndex\": {\r\n                const indicator: IgxPositiveVolumeIndexIndicatorComponent = new IgxPositiveVolumeIndexIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"PriceVolumeTrend\": {\r\n                const indicator: IgxPriceVolumeTrendIndicatorComponent = new IgxPriceVolumeTrendIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"RateOfChangeAndMomentum\": {\r\n                const indicator: IgxRateOfChangeAndMomentumIndicatorComponent = new IgxRateOfChangeAndMomentumIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"RelativeStrengthIndex\": {\r\n                const indicator: IgxRelativeStrengthIndexIndicatorComponent = new IgxRelativeStrengthIndexIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"SlowStochasticOscillator\": {\r\n                const indicator: IgxSlowStochasticOscillatorIndicatorComponent = new IgxSlowStochasticOscillatorIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"StandardDeviation\": {\r\n                const indicator: IgxStandardDeviationIndicatorComponent = new IgxStandardDeviationIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"StochRSI\": {\r\n                const indicator: IgxStochRSIIndicatorComponent = new IgxStochRSIIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n            case \"TRIX\": {\r\n                const indicator: IgxTRIXIndicatorComponent = new IgxTRIXIndicatorComponent();\r\n                indicator.xAxis = this.xAxis;\r\n                indicator.yAxis = this.indicatorYAxis;\r\n                indicator.displayType = this.displayType;\r\n                indicator.highMemberPath = \"High\";\r\n                indicator.lowMemberPath = \"Low\";\r\n                indicator.closeMemberPath = \"Close\";\r\n                indicator.openMemberPath = \"Open\";\r\n                indicator.volumeMemberPath = \"Volume\";\r\n                this.chart.series.add(indicator);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n","isMain":true,"fileExtension":"ts","fileHeader":"ts"},{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-financial-line-indicators/data-chart-type-financial-line-indicators.component.html","content":"<div class=\"container sample\">\r\n    <div class=\"container\">\r\n        <igx-data-chart\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            [dataSource]=\"data\">\r\n\r\n            <igx-category-x-axis #xAxis label=\"Date\"></igx-category-x-axis>\r\n            <igx-numeric-y-axis #yAxis1 labelLocation=\"OutsideRight\"\r\n                title=\"Financial Prices\"></igx-numeric-y-axis>\r\n            <igx-numeric-y-axis #yAxis2 labelLocation=\"OutsideLeft\"\r\n                title=\"Indicator Values\" majorStrokeThickness=0 maximumValue=800 ></igx-numeric-y-axis>\r\n\r\n            <igx-financial-price-series\r\n                name=\"series1\"\r\n                [xAxis]=\"xAxis\"\r\n                [yAxis]=\"yAxis1\"\r\n                displayType=\"Candlestick\"\r\n                highMemberPath=\"High\"\r\n                lowMemberPath=\"Low\"\r\n                closeMemberPath=\"Close\"\r\n                openMemberPath=\"Open\"\r\n                volumeMemberPath=\"Volume\">\r\n            </igx-financial-price-series>\r\n        </igx-data-chart>\r\n    </div>\r\n    <div class=\"options horizontal\">\r\n        <span class=\"options-label\"> Indicator Display Type: </span>\r\n        <select (change)=onIndicatorChanged($event)>\r\n            <option>AbsoluteVolumeOscillator</option>\r\n            <option>AccumulationDistribution</option>\r\n            <option>AverageDirectionalIndex</option>\r\n            <option>AverageTrueRange</option>\r\n            <option>BollingerBandWidth</option>\r\n            <option>ChaikinVolatility</option>\r\n            <option>ChaikinOscillator</option>\r\n            <option>CommodityChannelIndex</option>\r\n            <option>DetrendedPriceOscillator</option>\r\n            <option>EaseOfMovement</option>\r\n            <option>FastStochasticOscillator</option>\r\n            <option>ForceIndex</option>\r\n            <option>FullStochasticOscillator</option>\r\n            <option>MarketFacilitationIndex</option>\r\n            <option>MassIndex</option>\r\n            <option>MedianPrice</option>\r\n            <option>MoneyFlowIndex</option>\r\n            <option>MovingAverageConvergenceDivergence</option>\r\n            <option>NegativeVolumeIndex</option>\r\n            <option>OnBalanceVolume</option>\r\n            <option>PercentagePriceOscillator</option>\r\n            <option>PercentageVolumeOscillator</option>\r\n            <option>PositiveVolumeIndex</option>\r\n            <option>PriceVolumeTrend</option>\r\n            <option>RateOfChangeAndMomentum</option>\r\n            <option>RelativeStrengthIndex</option>\r\n            <option>SlowStochasticOscillator</option>\r\n            <option>StandardDeviation</option>\r\n            <option>StochRSI</option>\r\n            <option>TRIX</option>\r\n        </select>\r\n    </div>\r\n\r\n    <div class=\"container\">\r\n        <igx-data-chart #chart\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            [dataSource]=\"data\" >\r\n\r\n            <igx-category-x-axis #xAxis2 label=\"Date\"></igx-category-x-axis>\r\n            <igx-numeric-y-axis #yAxis3 labelLocation=\"OutsideRight\"\r\n                title=\"Indicators\"></igx-numeric-y-axis>\r\n        </igx-data-chart>\r\n    </div>\r\n</div>\r\n","isMain":true,"fileExtension":"html","fileHeader":"html"},{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-financial-line-indicators/data-chart-type-financial-line-indicators.component.scss","content":"/* styles are loaded the Shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/\r\n","isMain":true,"fileExtension":"scss","fileHeader":"scss"},{"hasRelativeAssetsUrls":false,"path":"src/app/SampleFinancialData.ts","content":"import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class SampleFinancialData {\r\n\r\n    public static create(): any[] {\r\n        // initial values\r\n        let v = 10000;\r\n        let o = 500;\r\n        let h = o + (Math.random() * 5);\r\n        let l = o - (Math.random() * 5);\r\n        let c = l + (Math.random() * (h - l));\r\n\r\n        const items = 100;\r\n        const end = new Date(2020, 11, 1);\r\n        let time = this.addDays(end, -items);\r\n\r\n        const data: any[] = [];\r\n        for (let i = 0; i < items; i++) {\r\n            const date = time.toDateString();\r\n            // const date = this.getDate(time);\r\n            // adding new data item\r\n            data.push({Time: time, Date: date, Close: c, Open: o, High: h, Low: l, Volume: v});\r\n            // generating new values\r\n            const mod = Math.random() - 0.4;\r\n            o = o + (mod * 5 * 2);\r\n            v = v + (mod * 5 * 100);\r\n            h = o + (Math.random() * 5);\r\n            l = o - (Math.random() * 5);\r\n            c = l + (Math.random() * (h - l));\r\n            time = this.addDays(time, 1);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    public static addDays(dt: Date, days: number): Date {\r\n        return new Date(dt.getTime() + days * 24 * 60 * 60 * 1000);\r\n    }\r\n    public static getDate(dt: Date): string {\r\n        return dt.getDay() + \"/\" + dt.getMonth() + \"/\" + dt.getFullYear();\r\n    }\r\n}\r\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { DataChartTypeFinancialLineIndicatorsComponent } from \"./data-chart-type-financial-line-indicators/data-chart-type-financial-line-indicators.component\";\r\nimport { \r\n\tIgxNumericXAxisModule,\r\n\tIgxNumericYAxisModule,\r\n\tIgxMoneyFlowIndexIndicatorModule,\r\n\tIgxLegendModule,\r\n\tIgxDataChartCoreModule,\r\n\tIgxDataChartCategoryModule,\r\n\tIgxFinancialPriceSeriesModule\r\n } from \"igniteui-angular-charts\";\r\nimport { SampleFinancialData } from \"./SampleFinancialData\";\n\n\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\r\n\tAppComponent,\r\n\tDataChartTypeFinancialLineIndicatorsComponent\r\n],\n  imports: [\r\n\tBrowserModule,\r\n\tBrowserAnimationsModule,\r\n\tFormsModule,\r\n\tIgxNumericXAxisModule,\r\n\tIgxNumericYAxisModule,\r\n\tIgxMoneyFlowIndexIndicatorModule,\r\n\tIgxLegendModule,\r\n\tIgxDataChartCoreModule,\r\n\tIgxDataChartCategoryModule,\r\n\tIgxFinancialPriceSeriesModule\r\n],\n  providers: [SampleFinancialData],\n  entryComponents: [],\n  schemas: []\n})\nexport class AppModule {}\n","isMain":true,"fileExtension":"ts","fileHeader":"modules"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-data-chart-type-financial-line-indicators></app-data-chart-type-financial-line-indicators>"}],"sampleDependencies":"{\"@angular/animations\":\"10.0.14\",\"@angular/common\":\"10.0.14\",\"@angular/compiler\":\"10.0.14\",\"@angular/core\":\"^10.0.14\",\"@angular/forms\":\"10.0.14\",\"@angular/platform-browser\":\"10.0.14\",\"@angular/platform-browser-dynamic\":\"10.0.14\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.6.2\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"11.1.10\",\"igniteui-angular-charts\":\"11.2.0-beta.0\",\"igniteui-angular-core\":\"11.2.0-beta.0\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.5.4\",\"tslib\":\"1.13.0\",\"web-animations-js\":\"^2.3.2\",\"zone.js\":\"~0.10.2\"}"}