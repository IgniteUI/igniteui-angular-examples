{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-scatter-shape-series/data-chart-type-scatter-shape-series.component.ts","content":"import { Component, OnInit, ViewChild } from \"@angular/core\";\r\n\r\nimport { IgxDataChartComponent } from \"igniteui-angular-charts\";\r\nimport { IgxNumericXAxisComponent } from \"igniteui-angular-charts\";\r\nimport { IgxNumericYAxisComponent } from \"igniteui-angular-charts\";\r\nimport { IgxScatterPolygonSeriesComponent } from \"igniteui-angular-charts\";\r\nimport { IgxScatterPolylineSeriesComponent } from \"igniteui-angular-charts\";\r\nimport { SampleShapeData } from \"../SampleShapeData\";\r\n\r\n@Component({\r\n  selector: \"app-data-chart-type-scatter-shape-series\",\r\n  styleUrls: [\"./data-chart-type-scatter-shape-series.component.scss\"],\r\n  templateUrl: \"./data-chart-type-scatter-shape-series.component.html\"\r\n})\r\nexport class DataChartTypeScatterShapeSeriesComponent implements OnInit {\r\n\r\n    @ViewChild(\"chart\", { static: true })\r\n    public chart: IgxDataChartComponent;\r\n    @ViewChild(\"xAxis\", { static: true })\r\n    public xAxis: IgxNumericXAxisComponent;\r\n    @ViewChild(\"yAxis\", { static: true })\r\n    public yAxis: IgxNumericYAxisComponent;\r\n\r\n    public data: any = SampleShapeData.create();\r\n\r\n    constructor() { }\r\n\r\n    public ngOnInit() {\r\n        this.setSeries(\"Polygon\");\r\n    }\r\n\r\n    public onSeriesTypeChanged(e: any) {\r\n        const selectedSeries = e.target.value.toString();\r\n        this.setSeries(selectedSeries);\r\n    }\r\n\r\n    public setSeries(seriesType: string) {\r\n         if (seriesType === \"Polygon\") {\r\n            const series1 = new IgxScatterPolygonSeriesComponent();\r\n            series1.name = \"series1\";\r\n            series1.shapeMemberPath = \"Points\";\r\n            series1.title = \"House Floor Plan\";\r\n            series1.brush = \"Gray\";\r\n            series1.outline = \"Black\";\r\n            series1.xAxis = this.xAxis;\r\n            series1.yAxis = this.yAxis;\r\n            this.chart.series.clear();\r\n            this.chart.series.add(series1);\r\n\r\n        } else if (seriesType === \"Polyline\") {\r\n\r\n            const series1 = new IgxScatterPolylineSeriesComponent();\r\n            series1.name = \"series1\";\r\n            series1.shapeMemberPath = \"Points\";\r\n            series1.title = \"House Outline\";\r\n            series1.brush = \"Black\";\r\n            series1.outline = \"Black\";\r\n            series1.xAxis = this.xAxis;\r\n            series1.yAxis = this.yAxis;\r\n\r\n            this.chart.series.clear();\r\n            this.chart.series.add(series1);\r\n        }\r\n    }\r\n}\r\n","isMain":true,"fileExtension":"ts","fileHeader":"ts"},{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-scatter-shape-series/data-chart-type-scatter-shape-series.component.html","content":"<div class=\"container sample\">\r\n\r\n    <div class=\"options horizontal\">\r\n        <span class=\"options-label\">Shape Series: </span>\r\n        <select (change)=\"onSeriesTypeChanged($event)\">\r\n            <option>Polygon</option>\r\n            <option>Polyline</option>\r\n        </select>\r\n    </div>\r\n    <div class=\"container\">\r\n        <igx-data-chart #chart\r\n            isHorizontalZoomEnabled=\"true\"\r\n            isVerticalZoomEnabled=\"true\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            [dataSource]=\"data\">\r\n\r\n            <igx-numeric-x-axis #xAxis name=\"xAxis\"></igx-numeric-x-axis>\r\n            <igx-numeric-y-axis #yAxis name=\"yAxis\"></igx-numeric-y-axis>\r\n\r\n            <!-- series are created in the setSeries function\r\n            alternatively, you can create these elements using this code: -->\r\n            <!--\r\n            <igx-scatter-polygon-series\r\n                name=\"series1\"\r\n                xAxisName=\"xAxis\"\r\n                yAxisName=\"yAxis\"\r\n                shapeMemberPath=\"Points\"\r\n                title=\"House Floor Plan\"\r\n                brush=\"Gray\"\r\n                outline=\"Black\"></igx-scatter-polygon-series> -->\r\n        </igx-data-chart>\r\n    </div>\r\n</div>\r\n","isMain":true,"fileExtension":"html","fileHeader":"html"},{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-scatter-shape-series/data-chart-type-scatter-shape-series.component.scss","content":"/* styles are loaded the Shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/\r\n","isMain":true,"fileExtension":"scss","fileHeader":"scss"},{"hasRelativeAssetsUrls":false,"path":"src/app/SampleShapeData.ts","content":"import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class SampleShapeData {\r\n\r\n    public static create(): any[] {\r\n        const shapes = [\r\n            { Label: \"Hallway\",\r\n              Points: [[ // points must a nested arrays\r\n                { x: 6, y: 0 },\r\n                { x: 6, y: 7 },\r\n                { x: 4, y: 7 },\r\n                { x: 4, y: 0 }\r\n                // last point does not have to match 1st point of the shape\r\n                // because polygon chartType always closes a shape by connecting 1st and last point with a line\r\n              ]]\r\n            },\r\n            { Label: \"Entrance\",\r\n              Points: [[\r\n                { x: 0, y: 5 },\r\n                { x: 4, y: 5 },\r\n                { x: 4, y: 7 },\r\n                { x: 0, y: 7 } ]]\r\n            },\r\n            { Label: \"Guest Bedroom\",\r\n              Points: [[{ x: 2, y: 10 }, { x: 7, y: 10 }, { x: 7, y: 7 }, { x: 2, y: 7 }] ] },\r\n            { Label: \"Bath\",\r\n              Points: [[{ x: 0, y: 10 }, { x: 2, y: 10 }, { x: 2, y: 7 }, { x: 0, y: 7 }] ] },\r\n            { Label: \"Kitchen\",\r\n              Points: [[{ x: 6, y: 7 }, { x: 10, y: 7 }, { x: 10, y: 4 }, { x: 6, y: 4 }] ] },\r\n            { Label: \"Living Room\",\r\n              Points: [[{ x: 6, y: 4 }, { x: 10, y: 4 }, { x: 10, y: 0 }, { x: 6, y: 0 }] ] },\r\n            { Label: \"Master Bedroom\",\r\n              Points: [[{ x: 0, y: 0 }, { x: 4, y: 0 }, { x: 4, y: 5 }, { x: 0, y: 5 }] ] }\r\n        ];\r\n        return shapes;\r\n    }\r\n}\r\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { DataChartTypeScatterShapeSeriesComponent } from \"./data-chart-type-scatter-shape-series/data-chart-type-scatter-shape-series.component\";\r\nimport { \r\n\tIgxDataChartCoreModule,\r\n\tIgxDataChartShapeModule,\r\n\tIgxDataChartShapeCoreModule,\r\n\tIgxLegendModule,\r\n\tIgxDataChartScatterModule\r\n } from \"igniteui-angular-charts\";\r\nimport { DataChartTypeScatterPolylineSeriesComponent } from \"./data-chart-type-scatter-polyline-series/data-chart-type-scatter-polyline-series.component\";\r\nimport { SampleShapeData } from \"./SampleShapeData\";\n\n\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\r\n\tAppComponent,\r\n\tDataChartTypeScatterShapeSeriesComponent\r\n],\n  imports: [\r\n\tBrowserModule,\r\n\tBrowserAnimationsModule,\r\n\tFormsModule,\r\n\tIgxDataChartCoreModule,\r\n\tIgxDataChartShapeModule,\r\n\tIgxDataChartShapeCoreModule,\r\n\tIgxLegendModule,\r\n\tDataChartTypeScatterPolylineSeriesComponent,\r\n\tIgxDataChartScatterModule\r\n],\n  providers: [SampleShapeData],\n  entryComponents: [],\n  schemas: []\n})\nexport class AppModule {}\n","isMain":true,"fileExtension":"ts","fileHeader":"modules"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-data-chart-type-scatter-shape-series></app-data-chart-type-scatter-shape-series>"}],"sampleDependencies":"{\"@angular/animations\":\"10.0.14\",\"@angular/common\":\"10.0.14\",\"@angular/compiler\":\"10.0.14\",\"@angular/core\":\"^10.0.14\",\"@angular/forms\":\"10.0.14\",\"@angular/platform-browser\":\"10.0.14\",\"@angular/platform-browser-dynamic\":\"10.0.14\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.6.2\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"11.1.10\",\"igniteui-angular-charts\":\"11.2.0-beta.0\",\"igniteui-angular-core\":\"11.2.0-beta.0\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.5.4\",\"tslib\":\"1.13.0\",\"web-animations-js\":\"^2.3.2\",\"zone.js\":\"~0.10.2\"}"}