{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-series-marker-template/data-chart-series-marker-template.component.ts","content":"import { IgxDataChartComponent } from 'igniteui-angular-charts';\r\nimport { Component, AfterViewInit, ViewChild } from '@angular/core';\r\nimport { IgxColumnSeriesComponent } from 'igniteui-angular-charts';\r\nimport { DataTemplateMeasureInfo, DataTemplateRenderInfo } from 'igniteui-angular-core';\r\n\r\n@Component({\r\n    selector: 'app-data-chart-series-marker-template',\r\n    templateUrl: './data-chart-series-marker-template.component.html',\r\n    styleUrls: ['./data-chart-series-marker-template.component.scss']\r\n})\r\nexport class DataChartSeriesMarkerTemplateComponent implements AfterViewInit {\r\n\r\n    public data: any[];\r\n\r\n    @ViewChild(\"series\", { static: true })\r\n    public series: IgxColumnSeriesComponent;\r\n\r\n    constructor() {\r\n        this.initData();\r\n    }\r\n\r\n    public initData() {\r\n        let numbers: number[] = [80, 50, 75, 100, 80, 40, 80, 75, 80, 85, 50, 85, 50, 75, 100, 80, 40, 80, 75, 80, 85, 50, 85, 50, 75, 100];\r\n\r\n        this.data = [];\r\n\r\n        for (let i = 0; i < numbers.length; i++) {\r\n            this.data.push({ Label: i.toString(), Value: numbers[i] });\r\n        }\r\n    }\r\n\r\n    public ngAfterViewInit(): void {\r\n        this.series.markerTemplate = this.getMarker();\r\n    }\r\n\r\n    public getMarker() : any {\r\n        let style = { outline: \"#8B5BB1\", fill: \"white\", text: \"black\" };\r\n        const size = 12;\r\n\r\n        return {\r\n            measure: function (measureInfo: DataTemplateMeasureInfo) {\r\n                const data = measureInfo.data;\r\n                const context = measureInfo.context;\r\n                let value = \"0.00\";\r\n                let item = data.item as any;\r\n                if (item != null) {\r\n                    value = item.Value.toString();\r\n                }\r\n                const height = context.measureText(\"M\").width;\r\n                const width = context.measureText(value).width;\r\n                measureInfo.width = width;\r\n                measureInfo.height = height + size;\r\n            },\r\n            render: function (renderInfo: DataTemplateRenderInfo) {\r\n                const item = renderInfo.data.item as any;\r\n                const value = item.Value.toString();\r\n\r\n                const ctx = renderInfo.context as CanvasRenderingContext2D;\r\n                let x = renderInfo.xPosition;\r\n                let y = renderInfo.yPosition;\r\n\r\n                let halfHeight = renderInfo.availableHeight / 2.0;\r\n\r\n                if (renderInfo.isHitTestRender) {\r\n                    ctx.fillStyle = renderInfo.data.actualItemBrush.fill;\r\n\r\n                    let width = renderInfo.availableWidth;\r\n                    let height = renderInfo.availableHeight;\r\n\r\n                    ctx.fillRect(x - (width / 2), y - (height / 2), renderInfo.availableWidth, renderInfo.availableHeight);\r\n                    return;\r\n                }\r\n\r\n                ctx.beginPath();\r\n                ctx.fillStyle = style.outline;\r\n\r\n                let xOffset = 14;\r\n                let yOffset = 10;\r\n\r\n                if(renderInfo.data.item.Value >= 100){\r\n                    xOffset = 20;\r\n                }\r\n\r\n                let width = renderInfo.availableWidth + xOffset;\r\n                let height = halfHeight + yOffset;\r\n\r\n                ctx.fillRect(x - (width / 2), y - (height / 2), width, height);\r\n                ctx.closePath();\r\n\r\n                ctx.font = '8pt Verdana';\r\n                ctx.textBaseline = 'top';\r\n                ctx.fillStyle = style.fill;\r\n                ctx.fillText(value, x - (xOffset / 2), y - (yOffset / 2));\r\n            }\r\n        }\r\n    }\r\n}\r\n","isMain":true,"fileExtension":"ts","fileHeader":"ts"},{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-series-marker-template/data-chart-series-marker-template.component.html","content":"<div class=\"container sample\">\r\n        <igx-data-chart\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            [dataSource]=\"data\">\r\n            <igx-category-x-axis #xAxis name=\"xAxis\" label=\"Label\" interval=\"1\">\r\n            </igx-category-x-axis>\r\n            <igx-numeric-y-axis #yAxis name=\"yAxis\" minimumValue=\"20\" maximumValue=\"120\">\r\n            </igx-numeric-y-axis >\r\n            <igx-column-series #series name=\"series\"\r\n                valueMemberPath=\"Value\"\r\n                [xAxis]=xAxis\r\n                [yAxis]=yAxis>\r\n            </igx-column-series>\r\n        </igx-data-chart>\r\n</div>\r\n","isMain":true,"fileExtension":"html","fileHeader":"html"},{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-series-marker-template/data-chart-series-marker-template.component.scss","content":"/* styles are loaded the Shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/\r\n","isMain":true,"fileExtension":"scss","fileHeader":"scss"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { DataChartSeriesMarkerTemplateComponent } from \"./data-chart-series-marker-template/data-chart-series-marker-template.component\";\r\nimport { \r\n\tIgxDataChartCoreModule,\r\n\tIgxDataChartCategoryModule,\r\n\tIgxLegendModule,\r\n\tIgxDataChartInteractivityModule\r\n } from \"igniteui-angular-charts\";\n\n\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\r\n\tAppComponent,\r\n\tDataChartSeriesMarkerTemplateComponent\r\n],\n  imports: [\r\n\tBrowserModule,\r\n\tBrowserAnimationsModule,\r\n\tFormsModule,\r\n\tIgxDataChartCoreModule,\r\n\tIgxDataChartCategoryModule,\r\n\tIgxLegendModule,\r\n\tIgxDataChartInteractivityModule\r\n],\n  providers: [],\n  entryComponents: [],\n  schemas: []\n})\nexport class AppModule {}\n","isMain":true,"fileExtension":"ts","fileHeader":"modules"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-data-chart-series-marker-template></app-data-chart-series-marker-template>"}],"sampleDependencies":"{\"@angular/animations\":\"10.0.14\",\"@angular/common\":\"10.0.14\",\"@angular/compiler\":\"10.0.14\",\"@angular/core\":\"^10.0.14\",\"@angular/forms\":\"10.0.14\",\"@angular/platform-browser\":\"10.0.14\",\"@angular/platform-browser-dynamic\":\"10.0.14\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.6.2\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"11.1.10\",\"igniteui-angular-charts\":\"11.2.0-beta.0\",\"igniteui-angular-core\":\"11.2.0-beta.0\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.5.4\",\"tslib\":\"1.13.0\",\"web-animations-js\":\"^2.3.2\",\"zone.js\":\"~0.10.2\"}"}