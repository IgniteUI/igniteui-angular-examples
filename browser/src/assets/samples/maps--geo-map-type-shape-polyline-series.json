{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/maps/geo-map-type-shape-polyline-series/map-type-shape-polyline-series.component.ts","content":"import { AfterViewInit, Component, EmbeddedViewRef, TemplateRef, ViewChild} from \"@angular/core\";\r\nimport { IgxShapeDataSource } from \"igniteui-angular-core\";\r\nimport { IgxGeographicMapComponent } from \"igniteui-angular-maps\";\r\nimport { IgxGeographicPolylineSeriesComponent\r\n} from \"igniteui-angular-maps\";\r\n\r\n@Component({\r\n  selector: \"app-map-type-shape-polyline-series\",\r\n  styleUrls: [\"./map-type-shape-polyline-series.component.scss\"],\r\n  templateUrl: \"./map-type-shape-polyline-series.component.html\"\r\n})\r\n\r\nexport class MapTypeShapePolylineSeriesComponent implements AfterViewInit {\r\n\r\n  @ViewChild(\"map\", {static: true})\r\n  public map: IgxGeographicMapComponent;\r\n\r\n  @ViewChild(\"template\", {static: true})\r\n  public tooltip: TemplateRef<object>;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.map.windowRect = { left: 0.195, top: 0.325, width: 0.2, height: 0.1 };\r\n\r\n    const sds = new IgxShapeDataSource();\r\n    sds.importCompleted.subscribe(() => this.onDataLoaded(sds, \"\"));\r\n    sds.shapefileSource = \"https://static.infragistics.com/xplatform/shapes/AmericanRoads.shp\";\r\n    sds.databaseSource  = \"https://static.infragistics.com/xplatform/shapes/AmericanRoads.dbf\";\r\n    sds.dataBind();\r\n  }\r\n\r\n  public onDataLoaded(sds: IgxShapeDataSource, e: any) {\r\n    const shapeRecords = sds.getPointData();\r\n    console.log(\"loaded /Shapes/AmericanRoads.shp \" + shapeRecords.length);\r\n\r\n    const roadsUSA: any[] = [];\r\n    const roadsMEX: any[] = [];\r\n    const roadsCAN: any[] = [];\r\n\r\n    // filtering records of loaded shapefile\r\n    for (const record of shapeRecords) {\r\n        // reading field values loaded from DBF file\r\n        const type = record.fieldValues.RoadType;\r\n        const road = {\r\n            country: record.fieldValues.Country,\r\n            length: record.fieldValues.RoadLength / 10,\r\n            points: record.points,\r\n            type: type === 1 ? \"Highway\" : \"Road\"\r\n        };\r\n        // grouping road items by country names\r\n        if (type === 1 || type === 2) {\r\n            if (road.country === \"USA\") {\r\n                roadsUSA.push(road);\r\n            } else if (road.country === \"MEX\") {\r\n                roadsMEX.push(road);\r\n            } else if (road.country === \"CAN\") {\r\n                roadsCAN.push(road);\r\n            }\r\n        }\r\n    }\r\n\r\n    // creating polyline series for roads of each country\r\n    this.addSeriesWith(roadsCAN, \"rgba(252, 32, 32, 0.9)\");\r\n    this.addSeriesWith(roadsUSA, \"rgba(3, 121, 231, 0.9)\");\r\n    this.addSeriesWith(roadsMEX, \"rgba(14, 194, 14, 0.9)\");\r\n}\r\n\r\n  public addSeriesWith(shapeData: any[], shapeBrush: string) {\r\n        const lineSeries = new IgxGeographicPolylineSeriesComponent ();\r\n        lineSeries.dataSource = shapeData;\r\n        lineSeries.shapeMemberPath = \"points\";\r\n        lineSeries.shapeFilterResolution = 2.0;\r\n        lineSeries.shapeStrokeThickness = 2;\r\n        lineSeries.shapeStroke = shapeBrush;\r\n        lineSeries.tooltipTemplate = this.tooltip;\r\n        this.map.series.add(lineSeries);\r\n    }\r\n}\r\n","isMain":true,"fileExtension":"ts","fileHeader":"ts"},{"hasRelativeAssetsUrls":false,"path":"src/app/maps/geo-map-type-shape-polyline-series/map-type-shape-polyline-series.component.html","content":"<div class=\"container sample\">\r\n    <igx-geographic-map #map\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        zoomable=\"true\" >\r\n    </igx-geographic-map>\r\n    <!--\r\n    <div class=\"my-legend\">\r\n    <div id=\"legendTitle\">Geographic Map: Polyline Series</div>\r\n    <div class=\"legend-scale\">\r\n    <ul class=\"legend-labels\">\r\n        <li><span style=\"background:rgb(219, 84, 5)\"></span>Canadian Roads</li>\r\n        <li><span style=\"background:rgb(32, 146, 252)\"></span>American Roads</li>\r\n        <li><span style=\"background:rgb(14, 194, 14)\"></span>Mexican Roads</li>\r\n    </ul>\r\n    </div>\r\n    </div> -->\r\n    <ng-template let-series=\"series\" let-item=\"item\" #template>\r\n    <div>\r\n        <span>{{item.country}} {{item.type}}</span><br />\r\n        <span>Length: {{item.length}} miles</span>\r\n    </div>\r\n    </ng-template>\r\n</div>\r\n","isMain":true,"fileExtension":"html","fileHeader":"html"},{"hasRelativeAssetsUrls":false,"path":"src/app/maps/geo-map-type-shape-polyline-series/map-type-shape-polyline-series.component.scss","content":"/* styles are loaded the Shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/\r\n","isMain":true,"fileExtension":"scss","fileHeader":"scss"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { MapTypeShapePolylineSeriesComponent } from \"./maps/geo-map-type-shape-polyline-series/map-type-shape-polyline-series.component\";\r\nimport { IgxGeographicMapModule } from \"igniteui-angular-maps\";\n\n\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\r\n\tAppComponent,\r\n\tMapTypeShapePolylineSeriesComponent\r\n],\n  imports: [\r\n\tBrowserModule,\r\n\tBrowserAnimationsModule,\r\n\tFormsModule,\r\n\tIgxGeographicMapModule\r\n],\n  providers: [],\n  entryComponents: [],\n  schemas: []\n})\nexport class AppModule {}\n","isMain":true,"fileExtension":"ts","fileHeader":"modules"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-map-type-shape-polyline-series></app-map-type-shape-polyline-series>"}],"sampleDependencies":"{\"@angular/animations\":\"10.0.14\",\"@angular/common\":\"10.0.14\",\"@angular/compiler\":\"10.0.14\",\"@angular/core\":\"^10.0.14\",\"@angular/forms\":\"10.0.14\",\"@angular/platform-browser\":\"10.0.14\",\"@angular/platform-browser-dynamic\":\"10.0.14\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.6.2\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"11.1.10\",\"igniteui-angular-charts\":\"11.2.0-beta.0\",\"igniteui-angular-core\":\"11.2.0-beta.0\",\"igniteui-angular-maps\":\"11.2.0-beta.0\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.5.4\",\"tslib\":\"1.13.0\",\"web-animations-js\":\"^2.3.2\",\"zone.js\":\"~0.10.2\"}"}