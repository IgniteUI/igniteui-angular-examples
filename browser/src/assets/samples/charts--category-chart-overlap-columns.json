{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/overlap-columns/category-chart-overlap-columns.component.ts","content":"import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ViewChild\r\n} from \"@angular/core\";\r\nimport { IgxCategoryChartComponent } from \"igniteui-angular-charts\";\r\nimport { IgxLegendComponent } from \"igniteui-angular-charts\";\r\n\r\n@Component({\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    selector: \"app-category-chart-overlap-columns\",\r\n    styleUrls: [\"./category-chart-overlap-columns.component.scss\"],\r\n    templateUrl: \"./category-chart-overlap-columns.component.html\"\r\n})\r\n\r\nexport class CategoryChartOverlapColumnsComponent implements AfterViewInit {\r\n\r\n    @ViewChild(\"chart\", { static: true })\r\n    public chart: IgxCategoryChartComponent;\r\n    @ViewChild(\"legend\", { static: true })\r\n    public legend: IgxLegendComponent;\r\n    public data: any;\r\n    public includedProperties: any;\r\n\r\n    constructor() {\r\n        const stats: any = [\r\n            { Music: 0.1, News: 0.2, TV: 1.1, Social: 0.9, Blogging: 0.3, Country: \"Japan\" },\r\n            { Music: 0.2, News: 0.2, TV: 1.3, Social: 1.2, Blogging: 0.5, Country: \"Germany\" },\r\n            { Music: 0.2, News: 0.2, TV: 1.5, Social: 1.1, Blogging: 0.4, Country: \"France\" },\r\n            { Music: 0.3, News: 0.2, TV: 1.5, Social: 1.4, Blogging: 0.5, Country: \"Ireland\" },\r\n            { Music: 0.4, News: 0.3, TV: 1.5, Social: 1.3, Blogging: 0.6, Country: \"Australia\" },\r\n            { Music: 0.3, News: 0.3, TV: 1.4, Social: 1.5, Blogging: 1.3, Country: \"Sweden\" },\r\n            { Music: 0.4, News: 0.2, TV: 1.4, Social: 1.4, Blogging: 1.4, Country: \"Poland\" },\r\n            { Music: 0.5, News: 0.3, TV: 1.4, Social: 1.4, Blogging: 1.5, Country: \"UK\" },\r\n            { Music: 0.4, News: 0.3, TV: 1.5, Social: 1.4, Blogging: 1.3, Country: \"Canada\" },\r\n            { Music: 0.4, News: 0.4, TV: 1.5, Social: 1.6, Blogging: 1.5, Country: \"Spain\" },\r\n            { Music: 0.5, News: 0.3, TV: 1.7, Social: 1.3, Blogging: 1.5, Country: \"Germany\" },\r\n            { Music: 0.4, News: 0.4, TV: 2.2, Social: 1.4, Blogging: 1.6, Country: \"Taiwan\" },\r\n            { Music: 0.5, News: 0.3, TV: 2.3, Social: 1.4, Blogging: 1.5, Country: \"Russia\" },\r\n            { Music: 0.5, News: 0.3, TV: 2.4, Social: 1.6, Blogging: 1.3, Country: \"China\" },\r\n            { Music: 0.6, News: 0.4, TV: 2.5, Social: 1.8, Blogging: 1.4, Country: \"USA\" },\r\n            { Music: 0.5, News: 0.5, TV: 2.4, Social: 2.2, Blogging: 1.5, Country: \"Italy\" },\r\n            { Music: 0.5, News: 0.6, TV: 2.5, Social: 2.3, Blogging: 1.4, Country: \"India\" },\r\n            { Music: 0.6, News: 0.5, TV: 2.5, Social: 2.4, Blogging: 1.3, Country: \"Argentina\" },\r\n            { Music: 0.6, News: 0.6, TV: 2.6, Social: 2.5, Blogging: 1.4, Country: \"Mexico\" },\r\n            { Music: 0.7, News: 0.5, TV: 2.6, Social: 2.6, Blogging: 1.4, Country: \"Turkey\" },\r\n            { Music: 0.8, News: 0.7, TV: 2.7, Social: 2.7, Blogging: 1.5, Country: \"Indonesia\" },\r\n            { Music: 0.9, News: 0.7, TV: 2.7, Social: 2.8, Blogging: 1.6, Country: \"Thailand\" },\r\n            { Music: 0.8, News: 0.8, TV: 2.8, Social: 2.9, Blogging: 1.7, Country: \"Brazil\" }\r\n        ];\r\n\r\n        // category chart does not have stacked series yet but you can render the stacked chart\r\n        // using multiple columns that are overlapping with each other and showing stacked values\r\n        for (const item of stats) {\r\n            // stacking up values of data items\r\n            item.StackBlogging = item.TV + item.Music + item.News + item.Social + item.Blogging;\r\n            item.StackSocial = item.TV + item.Music + item.News + item.Social;\r\n            item.StackNews = item.TV + item.Music + item.News;\r\n            item.StackMusic = item.TV + item.Music;\r\n            item.StackTV = item.TV;\r\n            // rounding up stacked values\r\n            item.StackBlogging = Math.round(item.StackBlogging * 10) / 10;\r\n            item.StackSocial = Math.round(item.StackSocial * 10) / 10;\r\n            item.StackNews = Math.round(item.StackNews * 10) / 10;\r\n            item.StackTV = Math.round(item.StackTV * 10) / 10;\r\n            item.StackMusic = Math.round(item.StackMusic * 10) / 10;\r\n        }\r\n        this.data = stats;\r\n    }\r\n\r\n    public ngAfterViewInit(): void {\r\n        // binding only properties with \"stack\" prefix\r\n        this.chart.includedProperties = [\r\n            \"StackBlogging\", \"StackSocial\",\r\n            \"StackNews\", \"StackTV\",\r\n            \"StackMusic\", \"Country\"\r\n        ];\r\n        this.chart.yAxisFormatLabel = this.formatYAxisLabel;\r\n        this.chart.legend = this.legend;\r\n    }\r\n\r\n    public formatYAxisLabel(item: any): string {\r\n        return item + \"h\";\r\n    }\r\n\r\n    public onSeriesAdded(e: any): void {\r\n        let str: string = e.args.series.valueMemberPath;\r\n\r\n        // setting series title based on valueMemberPath\r\n        str = str.replace(\"Stack\", \"\");\r\n        str = str.replace(\"Online\", \"Online \");\r\n        str = str.replace(\"Social\", \"Social Networking\");\r\n        str = str.replace(\"News\", \"Reading News\");\r\n        str = str.replace(\"TV\", \"Watching TV\");\r\n        str = str.replace(\"Music\", \"Listing Music\");\r\n        e.args.series.title = str;\r\n\r\n    }\r\n}\r\n","isMain":true,"fileExtension":"ts","fileHeader":"ts"},{"hasRelativeAssetsUrls":false,"path":"src/app/overlap-columns/category-chart-overlap-columns.component.html","content":"<div class=\"container sample\">\r\n    <div class=\"options vertical\" >\r\n        <label id=\"legendTitle\">Time Spend Online By Activity: </label>\r\n        <igx-legend #legend class=\"legend\" orientation=\"horizontal\" ></igx-legend>\r\n    </div>\r\n    <div class=\"container\">\r\n        <igx-category-chart\r\n            #chart\r\n            [dataSource]=\"data\"\r\n            [tooltipTemplate]=\"stackedTooltip\"\r\n            (seriesAdded)=\"onSeriesAdded($event)\"\r\n            height=\"100%\" width=\"100%\"\r\n            chartType=\"column\"\r\n             brushes=\"#7446B9 #9FB328 #F96232 #2E9CA6 #DC3F76\"\r\n            outlines=\"#7446B9 #9FB328 #F96232 #2E9CA6 #DC3F76\"\r\n            includedProperties=\"StackBlogging, StackSocial, StackNews, StackTV, StackMusic, Country\"\r\n\r\n            xAxisLabelTextStyle=\"9pt Verdana\"\r\n            xAxisLabelTopMargin=\"5\"\r\n            xAxisLabelTextColor=\"gray\"\r\n            xAxisLabelAngle=\"45\"\r\n            yAxisLabelTextStyle=\"9pt Verdana\"\r\n            yAxisLabelRightMargin=\"5\"\r\n            yAxisLabelTextColor=\"gray\"\r\n            yAxisLabelAngle=\"0\"\r\n\r\n            xAxisTickLength=\"0\"\r\n            xAxisTickStrokeThickness=\".5\"\r\n            xAxisTickStroke=\"gray\"\r\n            yAxisTickLength=\"0\"\r\n\r\n            yAxisMinimumValue=\"0\"\r\n            yAxisMaximumValue=\"10\"\r\n\r\n            xAxisInterval=\"1\"\r\n            xAxisStroke=\"gray\"\r\n            xAxisStrokeThickness=\"2\"\r\n\r\n            yAxisInterval=\"1\"\r\n            yAxisMajorStroke=\"gray\"\r\n            yAxisMajorStrokeThickness=\".5\"\r\n            yAxisMinorInterval=\"0.5\"\r\n            yAxisMinorStroke=\"gray\"\r\n            yAxisMinorStrokeThickness=\"0\"\r\n\r\n            xAxisGap=\"0.45\"\r\n            xAxisOverlap=\"1\">\r\n        </igx-category-chart>\r\n    </div>\r\n\r\n    <ng-template let-series=\"series\" let-item=\"item\" #stackedTooltip>\r\n        <div class=\"tooltipTable\">\r\n            <div class=\"tooltipRow\">\r\n                <div ></div>\r\n                <div class=\"tooltipTitle\" >{{item.Country}}</div>\r\n            </div>\r\n            <div class=\"tooltipRow\" *ngIf=\"series.title == 'Blogging'\">\r\n                <img class=\"tooltipLbl\" src=\"https://static.infragistics.com/xplatform/images/activities/Blogging.png\">\r\n                <div class=\"tooltipLbl\" style=\"color: #7446B9;\">{{series.title}}</div>\r\n                <div class=\"tooltipVal\">{{item.Blogging}}h</div>\r\n            </div>\r\n            <div class=\"tooltipRow\" *ngIf=\"series.title == 'Social Networking'\" >\r\n                <img class=\"tooltipLbl\" src=\"https://static.infragistics.com/xplatform/images/activities/SocialNetwork.png\">\r\n                <div class=\"tooltipLbl\" style=\"color: #9FB328;\">Social Net.</div>\r\n                <div class=\"tooltipVal\">{{item.Social}}h</div>\r\n            </div>\r\n            <div class=\"tooltipRow\" *ngIf=\"series.title == 'Reading News'\">\r\n                <img class=\"tooltipLbl\" src=\"https://static.infragistics.com/xplatform/images/activities/OnlinePress.png\">\r\n                <div class=\"tooltipLbl\" style=\"color: #F96232;\">{{series.title}}</div>\r\n                <div class=\"tooltipVal\">{{item.News}}h</div>\r\n            </div>\r\n            <div class=\"tooltipRow\" *ngIf=\"series.title == 'Watching TV'\" >\r\n                <img class=\"tooltipLbl\" src=\"https://static.infragistics.com/xplatform/images/activities/OnlineTV.png\">\r\n                <div class=\"tooltipLbl\" style=\"color: #DC3F76;\">{{series.title}}</div>\r\n                <div class=\"tooltipVal\">{{item.TV}}h</div>\r\n            </div>\r\n            <div class=\"tooltipRow\" *ngIf=\"series.title == 'Listing Music'\">\r\n                <img class=\"tooltipLbl\" src=\"https://static.infragistics.com/xplatform/images/activities/OnlineRadio.png\">\r\n                <div class=\"tooltipLbl\" style=\"color: #2E9CA6;\">{{series.title}}</div>\r\n                <div class=\"tooltipVal\">{{item.Music}}h</div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n","isMain":true,"fileExtension":"html","fileHeader":"html"},{"hasRelativeAssetsUrls":false,"path":"src/app/overlap-columns/category-chart-overlap-columns.component.scss","content":"/* styles are loaded the Shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/\r\n","isMain":true,"fileExtension":"scss","fileHeader":"scss"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { CategoryChartOverlapColumnsComponent } from \"./overlap-columns/category-chart-overlap-columns.component\";\r\nimport { \r\n\tIgxCategoryChartModule,\r\n\tIgxLegendModule\r\n } from \"igniteui-angular-charts\";\n\n\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\r\n\tAppComponent,\r\n\tCategoryChartOverlapColumnsComponent\r\n],\n  imports: [\r\n\tBrowserModule,\r\n\tBrowserAnimationsModule,\r\n\tFormsModule,\r\n\tIgxCategoryChartModule,\r\n\tIgxLegendModule\r\n],\n  providers: [],\n  entryComponents: [],\n  schemas: []\n})\nexport class AppModule {}\n","isMain":true,"fileExtension":"ts","fileHeader":"modules"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-category-chart-overlap-columns></app-category-chart-overlap-columns>"}],"sampleDependencies":"{\"@angular/animations\":\"10.0.14\",\"@angular/common\":\"10.0.14\",\"@angular/compiler\":\"10.0.14\",\"@angular/core\":\"^10.0.14\",\"@angular/forms\":\"10.0.14\",\"@angular/platform-browser\":\"10.0.14\",\"@angular/platform-browser-dynamic\":\"10.0.14\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.6.2\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"11.1.10\",\"igniteui-angular-charts\":\"11.2.0-beta.0\",\"igniteui-angular-core\":\"11.2.0-beta.0\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.5.4\",\"tslib\":\"1.13.0\",\"web-animations-js\":\"^2.3.2\",\"zone.js\":\"~0.10.2\"}"}