{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-category-series/data-chart-type-category-series.component.ts","content":"import { Component, OnInit, ViewChild } from \"@angular/core\";\r\n\r\n// types of axis:\r\nimport { IgxCategoryXAxisComponent } from \"igniteui-angular-charts\";\r\nimport { IgxNumericYAxisComponent } from \"igniteui-angular-charts\";\r\n\r\n// types of column series:\r\nimport { IgxAreaSeriesComponent } from \"igniteui-angular-charts\";\r\nimport { IgxColumnSeriesComponent } from \"igniteui-angular-charts\";\r\nimport { IgxLineSeriesComponent } from \"igniteui-angular-charts\";\r\nimport { IgxPointSeriesComponent } from \"igniteui-angular-charts\";\r\nimport { IgxSplineAreaSeriesComponent } from \"igniteui-angular-charts\";\r\nimport { IgxSplineSeriesComponent } from \"igniteui-angular-charts\";\r\nimport { IgxStepAreaSeriesComponent } from \"igniteui-angular-charts\";\r\nimport { IgxStepLineSeriesComponent } from \"igniteui-angular-charts\";\r\nimport { IgxWaterfallSeriesComponent } from \"igniteui-angular-charts\";\r\n\r\n// importing data datachart's modules:\r\nimport { IgxDataChartComponent } from \"igniteui-angular-charts\";\r\nimport { MarkerType } from \"igniteui-angular-charts\";\r\n\r\nimport { IgxLegendComponent } from \"igniteui-angular-charts\";\r\n\r\n@Component({\r\n  selector: \"app-data-chart-type-category-series\",\r\n  styleUrls: [\"./data-chart-type-category-series.component.scss\"],\r\n  templateUrl: \"./data-chart-type-category-series.component.html\"\r\n})\r\nexport class DataChartTypeCategorySeriesComponent implements OnInit {\r\n\r\n    @ViewChild(\"chart\", { static: true })\r\n    public chart: IgxDataChartComponent;\r\n    @ViewChild(\"xAxis\", { static: true })\r\n    public xAxis: IgxCategoryXAxisComponent;\r\n    @ViewChild(\"yAxis\", { static: true })\r\n    public yAxis: IgxNumericYAxisComponent;\r\n    @ViewChild(\"legend\", { static: true })\r\n    public legend: IgxLegendComponent;\r\n    public data = [\r\n\r\n        {Year: \"1996\", USA: 148, CHN: 110, RUS: 95},\r\n        {Year: \"2000\", USA: 142, CHN: 115, RUS: 91},\r\n        {Year: \"2004\", USA: 134, CHN: 121, RUS: 86},\r\n        {Year: \"2008\", USA: 131, CHN: 129, RUS: 65},\r\n        {Year: \"2012\", USA: 135, CHN: 115, RUS: 77},\r\n        {Year: \"2016\", USA: 146, CHN: 112, RUS: 88}\r\n    ];\r\n\r\n    constructor() { }\r\n\r\n    public ngOnInit() {\r\n        if (this.legend) {\r\n            this.chart.legend = this.legend;\r\n            this.setSeries(\"Column\");\r\n        }\r\n  }\r\n\r\n    public onSeriesTypeChanged(e: any) {\r\n\r\n        const selectedSeries = e.target.value.toString();\r\n        this.chart.series.clear();\r\n        this.setSeries(selectedSeries);\r\n    }\r\n\r\n    public setSeries(seriesType: string) {\r\n\r\n        if (seriesType === \"Column\") {\r\n\r\n            const series1 = new IgxColumnSeriesComponent();\r\n            series1.name = \"series1\";\r\n            series1.valueMemberPath = \"USA\";\r\n            series1.title = \"USA\";\r\n            series1.xAxis = this.xAxis;\r\n            series1.yAxis = this.yAxis;\r\n\r\n            const series2 = new IgxColumnSeriesComponent();\r\n            series2.name = \"series2\";\r\n            series2.valueMemberPath = \"RUS\";\r\n            series2.title = \"Russia\";\r\n            series2.xAxis = this.xAxis;\r\n            series2.yAxis = this.yAxis;\r\n\r\n            this.chart.series.clear();\r\n            this.chart.series.add(series1);\r\n            this.chart.series.add(series2);\r\n\r\n        } else if (seriesType === \"Line\") {\r\n\r\n            const series1 = new IgxLineSeriesComponent();\r\n            series1.name = \"series1\";\r\n            series1.markerType = MarkerType.Circle;\r\n            series1.valueMemberPath = \"USA\";\r\n            series1.title = \"USA\";\r\n            series1.xAxis = this.xAxis;\r\n            series1.yAxis = this.yAxis;\r\n            series1.thickness = 2;\r\n\r\n            const series2 = new IgxLineSeriesComponent();\r\n            series1.name = \"series1\";\r\n            series2.markerType = MarkerType.Circle;\r\n            series2.valueMemberPath = \"RUS\";\r\n            series2.title = \"Russia\";\r\n            series2.xAxis = this.xAxis;\r\n            series2.yAxis = this.yAxis;\r\n            series2.thickness = 2;\r\n\r\n            this.chart.series.clear();\r\n            this.chart.series.add(series1);\r\n            this.chart.series.add(series2);\r\n\r\n        } else if (seriesType === \"Point\") {\r\n\r\n            const series1 = new IgxPointSeriesComponent();\r\n            series1.name = \"series1\";\r\n            series1.markerType = MarkerType.Circle;\r\n            series1.valueMemberPath = \"USA\";\r\n            series1.title = \"USA\";\r\n            series1.xAxis = this.xAxis;\r\n            series1.yAxis = this.yAxis;\r\n            series1.thickness = 2;\r\n\r\n            const series2 = new IgxPointSeriesComponent();\r\n            series1.name = \"series2\";\r\n            series2.markerType = MarkerType.Circle;\r\n            series2.valueMemberPath = \"RUS\";\r\n            series2.title = \"Russia\";\r\n            series2.xAxis = this.xAxis;\r\n            series2.yAxis = this.yAxis;\r\n            series2.thickness = 2;\r\n\r\n            this.chart.series.clear();\r\n            this.chart.series.add(series1);\r\n            this.chart.series.add(series2);\r\n\r\n        } else if (seriesType === \"Area\") {\r\n\r\n            const series1 = new IgxAreaSeriesComponent();\r\n            series1.name = \"series1\";\r\n            series1.markerType = MarkerType.Circle;\r\n            series1.valueMemberPath = \"USA\";\r\n            series1.title = \"USA\";\r\n            series1.xAxis = this.xAxis;\r\n            series1.yAxis = this.yAxis;\r\n            series1.thickness = 2;\r\n\r\n            const series2 = new IgxAreaSeriesComponent();\r\n            series1.name = \"series2\";\r\n            series2.markerType = MarkerType.Circle;\r\n            series2.valueMemberPath = \"RUS\";\r\n            series2.title = \"Russia\";\r\n            series2.xAxis = this.xAxis;\r\n            series2.yAxis = this.yAxis;\r\n            series2.thickness = 2;\r\n\r\n            this.chart.series.clear();\r\n            this.chart.series.add(series1);\r\n            this.chart.series.add(series2);\r\n\r\n        } else if (seriesType === \"Spline\") {\r\n\r\n            const series1 = new IgxSplineSeriesComponent();\r\n            series1.name = \"series1\";\r\n            series1.markerType = MarkerType.Circle;\r\n            series1.valueMemberPath = \"USA\";\r\n            series1.title = \"USA\";\r\n            series1.xAxis = this.xAxis;\r\n            series1.yAxis = this.yAxis;\r\n            series1.thickness = 2;\r\n\r\n            const series2 = new IgxSplineSeriesComponent();\r\n            series1.name = \"series2\";\r\n            series2.markerType = MarkerType.Circle;\r\n            series2.valueMemberPath = \"RUS\";\r\n            series2.title = \"Russia\";\r\n            series2.xAxis = this.xAxis;\r\n            series2.yAxis = this.yAxis;\r\n\r\n            this.chart.series.clear();\r\n            this.chart.series.add(series1);\r\n            this.chart.series.add(series2);\r\n\r\n        } else if (seriesType === \"SplineArea\") {\r\n\r\n            const series1 = new IgxSplineAreaSeriesComponent();\r\n            series1.name = \"series1\";\r\n            series1.valueMemberPath = \"USA\";\r\n            series1.title = \"USA\";\r\n            series1.xAxis = this.xAxis;\r\n            series1.yAxis = this.yAxis;\r\n            series1.thickness = 2;\r\n\r\n            const series2 = new IgxSplineAreaSeriesComponent();\r\n            series2.name = \"series2\";\r\n            series2.valueMemberPath = \"RUS\";\r\n            series2.title = \"Russia\";\r\n            series2.xAxis = this.xAxis;\r\n            series2.yAxis = this.yAxis;\r\n\r\n            this.chart.series.clear();\r\n            this.chart.series.add(series1);\r\n            this.chart.series.add(series2);\r\n\r\n        } else if (seriesType === \"StepArea\") {\r\n\r\n            const series1 = new IgxStepAreaSeriesComponent();\r\n            series1.name = \"series1\";\r\n            series1.valueMemberPath = \"USA\";\r\n            series1.title = \"USA\";\r\n            series1.xAxis = this.xAxis;\r\n            series1.yAxis = this.yAxis;\r\n            series1.thickness = 2;\r\n\r\n            const series2 = new IgxStepAreaSeriesComponent();\r\n            series2.name = \"series2\";\r\n            series2.valueMemberPath = \"RUS\";\r\n            series2.title = \"Russia\";\r\n            series2.xAxis = this.xAxis;\r\n            series2.yAxis = this.yAxis;\r\n\r\n            this.chart.series.clear();\r\n            this.chart.series.add(series1);\r\n            this.chart.series.add(series2);\r\n\r\n        } else if (seriesType === \"StepLine\") {\r\n\r\n            const series1 = new IgxStepLineSeriesComponent();\r\n            series1.name = \"series1\";\r\n            series1.valueMemberPath = \"USA\";\r\n            series1.title = \"USA\";\r\n            series1.xAxis = this.xAxis;\r\n            series1.yAxis = this.yAxis;\r\n            series1.thickness = 2;\r\n\r\n            const series2 = new IgxStepLineSeriesComponent();\r\n            series2.name = \"series2\";\r\n            series2.valueMemberPath = \"RUS\";\r\n            series2.title = \"Russia\";\r\n            series2.xAxis = this.xAxis;\r\n            series2.yAxis = this.yAxis;\r\n\r\n            this.chart.series.clear();\r\n            this.chart.series.add(series1);\r\n            this.chart.series.add(series2);\r\n\r\n        } else if (seriesType === \"Waterfall\") {\r\n\r\n            const series1 = new IgxWaterfallSeriesComponent();\r\n            series1.name = \"series1\";\r\n            series1.valueMemberPath = \"USA\";\r\n            series1.title = \"USA\";\r\n            series1.xAxis = this.xAxis;\r\n            series1.yAxis = this.yAxis;\r\n            series1.thickness = 2;\r\n\r\n            const series2 = new IgxWaterfallSeriesComponent();\r\n            series2.name = \"series2\";\r\n            series2.valueMemberPath = \"RUS\";\r\n            series2.title = \"Russia\";\r\n            series2.xAxis = this.xAxis;\r\n            series2.yAxis = this.yAxis;\r\n\r\n            this.chart.series.clear();\r\n            this.chart.series.add(series1);\r\n            this.chart.series.add(series2);\r\n\r\n        }\r\n    }\r\n\r\n}\r\n","isMain":true,"fileExtension":"ts","fileHeader":"ts"},{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-category-series/data-chart-type-category-series.component.html","content":"<div class=\"container sample\">\r\n<div class=\"options horizontal\">\r\n        <span class=\"options-label\">Type of Category Series:</span>\r\n        <select\r\n        (change)=onSeriesTypeChanged($event)>\r\n                <option>Column</option>\r\n                <option>Area</option>\r\n                <option>Point</option>\r\n                <option>Line</option>\r\n                <option>Spline</option>\r\n                <option>SplineArea</option>\r\n                <option>StepArea</option>\r\n                <option>StepLine</option>\r\n                <option>Waterfall</option>\r\n        </select>\r\n        <label id=\"legendTitle\">Legend: </label>\r\n        <igx-legend #legend orientation=\"horizontal\"></igx-legend>\r\n</div>\r\n\r\n<div class=\"container\">\r\n        <igx-data-chart #chart\r\n        isHorizontalZoomEnabled=\"true\"\r\n        isVerticalZoomEnabled=\"true\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        [dataSource]=\"data\" >\r\n        <igx-numeric-y-axis title=\"Total Olympic Medals\"\r\n          #yAxis>\r\n        </igx-numeric-y-axis>\r\n        <igx-category-x-axis\r\n          label=\"Year\" title=\"Olympic Years\"\r\n          #xAxis>\r\n        </igx-category-x-axis>\r\n\r\n         <!-- series are created in the setSeries function\r\n                        alternatively, you can create series using this code: -->\r\n\r\n        <!-- <igx-column-series\r\n\r\n          valueMemberPath=\"USA\"\r\n          [xAxis]=\"xAxis\"\r\n          [yAxis]=\"yAxis\">\r\n        </igx-column-series>\r\n\r\n         <igx-column-series\r\n          valueMemberPath=\"RUS\"\r\n          [xAxis]=\"xAxis\"\r\n          [yAxis]=\"yAxis\">\r\n        </igx-column-series> -->\r\n      </igx-data-chart>\r\n</div>\r\n</div>\r\n","isMain":true,"fileExtension":"html","fileHeader":"html"},{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-category-series/data-chart-type-category-series.component.scss","content":"/* styles are loaded the Shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/\r\n","isMain":true,"fileExtension":"scss","fileHeader":"scss"},{"hasRelativeAssetsUrls":false,"path":"src/app/SampleCategoryData.ts","content":"import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class SampleCategoryData {\r\n\r\n    public static create(): any[] {\r\n        const data: any[] = [];\r\n        // total olympic medals for top countries\r\n        data.push({Year: \"1996\", USA: 148, CHN: 110, RUS: 95});\r\n        data.push({Year: \"2000\", USA: 142, CHN: 115, RUS: 91});\r\n        data.push({Year: \"2004\", USA: 134, CHN: 121, RUS: 86});\r\n        data.push({Year: \"2008\", USA: 131, CHN: 129, RUS: 65});\r\n        data.push({Year: \"2012\", USA: 135, CHN: 115, RUS: 77});\r\n        data.push({Year: \"2016\", USA: 146, CHN: 112, RUS: 88});\r\n        return data;\r\n    }\r\n}\r\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { DataChartTypeCategorySeriesComponent } from \"./data-chart-type-category-series/data-chart-type-category-series.component\";\r\nimport { \r\n\tIgxDataChartCoreModule,\r\n\tIgxDataChartCategoryModule,\r\n\tIgxLegendModule,\r\n\tIgxDataChartInteractivityModule\r\n } from \"igniteui-angular-charts\";\r\nimport { SampleCategoryData } from \"./SampleCategoryData\";\n\n\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\r\n\tAppComponent,\r\n\tDataChartTypeCategorySeriesComponent\r\n],\n  imports: [\r\n\tBrowserModule,\r\n\tBrowserAnimationsModule,\r\n\tFormsModule,\r\n\tIgxDataChartCoreModule,\r\n\tIgxDataChartCategoryModule,\r\n\tIgxLegendModule,\r\n\tIgxDataChartInteractivityModule\r\n],\n  providers: [SampleCategoryData],\n  entryComponents: [],\n  schemas: []\n})\nexport class AppModule {}\n","isMain":true,"fileExtension":"ts","fileHeader":"modules"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-data-chart-type-category-series></app-data-chart-type-category-series>"}],"sampleDependencies":"{\"@angular/animations\":\"10.0.14\",\"@angular/common\":\"10.0.14\",\"@angular/compiler\":\"10.0.14\",\"@angular/core\":\"^10.0.14\",\"@angular/forms\":\"10.0.14\",\"@angular/platform-browser\":\"10.0.14\",\"@angular/platform-browser-dynamic\":\"10.0.14\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.6.2\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"11.1.10\",\"igniteui-angular-charts\":\"11.2.0-beta.0\",\"igniteui-angular-core\":\"11.2.0-beta.0\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.5.4\",\"tslib\":\"1.13.0\",\"web-animations-js\":\"^2.3.2\",\"zone.js\":\"~0.10.2\"}"}