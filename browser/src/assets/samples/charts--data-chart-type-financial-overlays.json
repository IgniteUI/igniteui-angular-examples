{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-financial-overlays/data-chart-type-financial-overlays.component.ts","content":"import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { SampleFinancialData } from \"../SampleFinancialData\";\r\n\r\nimport { IgxBollingerBandsOverlayComponent } from \"igniteui-angular-charts\";\r\nimport { IgxPriceChannelOverlayComponent } from \"igniteui-angular-charts\";\r\nimport { IgxNumericYAxisComponent } from \"igniteui-angular-charts\";\r\nimport { IgxCategoryXAxisComponent } from \"igniteui-angular-charts\";\r\nimport { IgxDataChartComponent } from \"igniteui-angular-charts\";\r\n\r\n@Component({\r\n    selector: 'app-data-chart-type-financial-overlays',\r\n    templateUrl: './data-chart-type-financial-overlays.component.html',\r\n    styleUrls: ['./data-chart-type-financial-overlays.component.scss']\r\n})\r\nexport class DataChartTypeFinancialOverlaysComponent implements OnInit {\r\n\r\n    public data: any[] = SampleFinancialData.create();\r\n\r\n    private bollinger: IgxBollingerBandsOverlayComponent;\r\n    private priceChannel: IgxPriceChannelOverlayComponent;\r\n\r\n    @ViewChild(\"chart\", { static: true })\r\n    public chart: IgxDataChartComponent;\r\n\r\n    @ViewChild(\"xAxis\", { static: true })\r\n    public xAxis: IgxCategoryXAxisComponent;\r\n\r\n    @ViewChild(\"yAxis\", { static: true })\r\n    public yAxis: IgxNumericYAxisComponent;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.bollinger = new IgxBollingerBandsOverlayComponent();\r\n        this.bollinger.xAxis = this.xAxis;\r\n        this.bollinger.yAxis = this.yAxis;\r\n        this.bollinger.highMemberPath = \"High\";\r\n        this.bollinger.lowMemberPath = \"Low\";\r\n        this.bollinger.closeMemberPath = \"Close\";\r\n        this.bollinger.openMemberPath = \"Open\";\r\n        this.bollinger.volumeMemberPath = \"Volume\";\r\n\r\n        this.priceChannel = new IgxPriceChannelOverlayComponent();\r\n        this.priceChannel.xAxis = this.xAxis;\r\n        this.priceChannel.yAxis = this.yAxis;\r\n        this.priceChannel.highMemberPath = \"High\";\r\n        this.priceChannel.lowMemberPath = \"Low\";\r\n        this.priceChannel.closeMemberPath = \"Close\";\r\n        this.priceChannel.openMemberPath = \"Open\";\r\n        this.priceChannel.volumeMemberPath = \"Volume\";\r\n    }\r\n\r\n    public onOverlayChanged = (e: any) => {\r\n        const type = e.target.value.toString();\r\n        switch (type) {\r\n            case \"None\": {\r\n                this.chart.series.remove(this.priceChannel);\r\n                this.chart.series.remove(this.bollinger);\r\n                break;\r\n            }\r\n            case \"BollingerBands\": {\r\n                this.chart.series.remove(this.priceChannel);\r\n                this.chart.series.add(this.bollinger);\r\n                break;\r\n            }\r\n            case \"PriceChannel\": {\r\n                this.chart.series.remove(this.bollinger);\r\n                this.chart.series.add(this.priceChannel);\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","isMain":true,"fileExtension":"ts","fileHeader":"ts"},{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-financial-overlays/data-chart-type-financial-overlays.component.html","content":"<div class=\"container sample\">\r\n    <div class=\"options horizontal\">\r\n        <span class=\"options-label\"> Indicator Display Type: </span>\r\n        <select (change)=\"onOverlayChanged($event)\">\r\n            <option>None</option>\r\n            <option>BollingerBands</option>\r\n            <option>PriceChannel</option>\r\n        </select>\r\n    </div>\r\n    <div class=\"container\">\r\n        <igx-data-chart #chart width=\"100%\" height=\"100%\" [dataSource]=\"data\">\r\n\r\n            <igx-category-x-axis #xAxis label=\"Date\"></igx-category-x-axis>\r\n            <igx-numeric-y-axis #yAxis labelLocation=\"OutsideRight\" title=\"Financial Prices\"></igx-numeric-y-axis>\r\n\r\n            <igx-financial-price-series name=\"series1\" [xAxis]=\"xAxis\" [yAxis]=\"yAxis\" displayType=\"Candlestick\"\r\n                highMemberPath=\"High\" lowMemberPath=\"Low\" closeMemberPath=\"Close\" openMemberPath=\"Open\"\r\n                volumeMemberPath=\"Volume\">\r\n            </igx-financial-price-series>\r\n        </igx-data-chart>\r\n    </div>\r\n</div>\r\n","isMain":true,"fileExtension":"html","fileHeader":"html"},{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-financial-overlays/data-chart-type-financial-overlays.component.scss","content":"/* styles are loaded the Shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/\r\n","isMain":true,"fileExtension":"scss","fileHeader":"scss"},{"hasRelativeAssetsUrls":false,"path":"src/app/SampleFinancialData.ts","content":"import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class SampleFinancialData {\r\n\r\n    public static create(): any[] {\r\n        // initial values\r\n        let v = 10000;\r\n        let o = 500;\r\n        let h = o + (Math.random() * 5);\r\n        let l = o - (Math.random() * 5);\r\n        let c = l + (Math.random() * (h - l));\r\n\r\n        const items = 100;\r\n        const end = new Date(2020, 11, 1);\r\n        let time = this.addDays(end, -items);\r\n\r\n        const data: any[] = [];\r\n        for (let i = 0; i < items; i++) {\r\n            const date = time.toDateString();\r\n            // const date = this.getDate(time);\r\n            // adding new data item\r\n            data.push({Time: time, Date: date, Close: c, Open: o, High: h, Low: l, Volume: v});\r\n            // generating new values\r\n            const mod = Math.random() - 0.4;\r\n            o = o + (mod * 5 * 2);\r\n            v = v + (mod * 5 * 100);\r\n            h = o + (Math.random() * 5);\r\n            l = o - (Math.random() * 5);\r\n            c = l + (Math.random() * (h - l));\r\n            time = this.addDays(time, 1);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    public static addDays(dt: Date, days: number): Date {\r\n        return new Date(dt.getTime() + days * 24 * 60 * 60 * 1000);\r\n    }\r\n    public static getDate(dt: Date): string {\r\n        return dt.getDay() + \"/\" + dt.getMonth() + \"/\" + dt.getFullYear();\r\n    }\r\n}\r\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { DataChartTypeFinancialOverlaysComponent } from \"./data-chart-type-financial-overlays/data-chart-type-financial-overlays.component\";\r\nimport { \r\n\tIgxNumericXAxisModule,\r\n\tIgxNumericYAxisModule,\r\n\tIgxMoneyFlowIndexIndicatorModule,\r\n\tIgxLegendModule,\r\n\tIgxDataChartCoreModule,\r\n\tIgxDataChartCategoryModule,\r\n\tIgxFinancialPriceSeriesModule\r\n } from \"igniteui-angular-charts\";\r\nimport { SampleFinancialData } from \"./SampleFinancialData\";\n\n\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\r\n\tAppComponent,\r\n\tDataChartTypeFinancialOverlaysComponent\r\n],\n  imports: [\r\n\tBrowserModule,\r\n\tBrowserAnimationsModule,\r\n\tFormsModule,\r\n\tIgxNumericXAxisModule,\r\n\tIgxNumericYAxisModule,\r\n\tIgxMoneyFlowIndexIndicatorModule,\r\n\tIgxLegendModule,\r\n\tIgxDataChartCoreModule,\r\n\tIgxDataChartCategoryModule,\r\n\tIgxFinancialPriceSeriesModule\r\n],\n  providers: [SampleFinancialData],\n  entryComponents: [],\n  schemas: []\n})\nexport class AppModule {}\n","isMain":true,"fileExtension":"ts","fileHeader":"modules"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-data-chart-type-financial-overlays></app-data-chart-type-financial-overlays>"}],"sampleDependencies":"{\"@angular/animations\":\"10.0.14\",\"@angular/common\":\"10.0.14\",\"@angular/compiler\":\"10.0.14\",\"@angular/core\":\"^10.0.14\",\"@angular/forms\":\"10.0.14\",\"@angular/platform-browser\":\"10.0.14\",\"@angular/platform-browser-dynamic\":\"10.0.14\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.6.2\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"11.1.10\",\"igniteui-angular-charts\":\"11.2.0-beta.0\",\"igniteui-angular-core\":\"11.2.0-beta.0\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.5.4\",\"tslib\":\"1.13.0\",\"web-animations-js\":\"^2.3.2\",\"zone.js\":\"~0.10.2\"}"}