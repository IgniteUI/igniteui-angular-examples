{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/stacked-column-chart/data-chart-stacked-column-chart.component.ts","content":"import { Component, OnInit } from '@angular/core';\r\nimport { DataTemplateMeasureInfo, DataTemplateRenderInfo } from 'igniteui-angular-core';\r\n\r\n@Component({\r\n    selector: 'app-data-chart-stacked-column-chart',\r\n    templateUrl: './data-chart-stacked-column-chart.component.html',\r\n    styleUrls: ['./data-chart-stacked-column-chart.component.scss']\r\n})\r\nexport class DataChartStackedColumnChartComponent implements OnInit {\r\n\r\n    public data: any[];\r\n    public calloutDataSource : any[];\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.data = [\r\n            { Year: \"2014\", USA: 30, Europe: 40, China: 45 },\r\n            { Year: \"2015\", USA: 20, Europe: 80, China: 50 },\r\n            { Year: \"2016\", USA: 50, Europe: 15, China: 90 },\r\n            { Year: \"2017\", USA: 50, Europe: 80, China: 130 },\r\n            { Year: \"2018\", USA: 35, Europe: 40, China: 135 },\r\n            { Year: \"2019\", USA: 40, Europe: 80, China: 95 },\r\n        ];\r\n\r\n        this.calloutDataSource = [];\r\n\r\n        for (let i = 0; i < this.data.length; i++) {\r\n            const info = this.data[i];\r\n\r\n            info.USAMarker = info.USA / 2;\r\n            info.EuropeMarker = info.USA + (info.Europe / 2);\r\n            info.ChinaMarker = info.USA + info.Europe + (info.China / 2);\r\n            info.Sum = info.USA + info.Europe + info.China;\r\n\r\n            this.calloutDataSource.push({ X: i, Y: info.Sum, Label: info.Sum.toString()});\r\n        }\r\n    }\r\n\r\n    public getMarker() : any {\r\n        let style = { text: \"white\" };\r\n        const size = 12;\r\n\r\n        return {\r\n            measure: function (measureInfo) {\r\n                const data = measureInfo.data;\r\n                const context = measureInfo.context;\r\n                let value = \"0.00\";\r\n                let item = data.item;\r\n                if (item != null) {\r\n                    value = item.USA.toString();\r\n                }\r\n                const height = context.measureText(\"M\").width;\r\n                const width = context.measureText(value).width;\r\n                measureInfo.width = width;\r\n                measureInfo.height = height + size;\r\n            },\r\n            render: function (renderInfo) {\r\n                const item = renderInfo.data.item;\r\n                const series = renderInfo.data.series;\r\n\r\n                const valuePath = series.valueColumn.propertyName;\r\n\r\n                var value = 0;\r\n\r\n                switch (valuePath) {\r\n                    case \"USAMarker\":\r\n                        value = item.USA;\r\n                        break;\r\n                    case \"EuropeMarker\":\r\n                        value = item.Europe;\r\n                        break;\r\n                    case \"ChinaMarker\":\r\n                        value = item.China;\r\n                        break;\r\n                }\r\n\r\n                const ctx = renderInfo.context;\r\n                let x = renderInfo.xPosition;\r\n                let y = renderInfo.yPosition;\r\n\r\n                if (renderInfo.isHitTestRender) {\r\n                    ctx.fillStyle = renderInfo.data.actualItemBrush.fill;\r\n\r\n                    let width = renderInfo.availableWidth;\r\n                    let height = renderInfo.availableHeight;\r\n\r\n                    ctx.fillRect(x - (width / 2), y - (height), renderInfo.availableWidth, renderInfo.availableHeight);\r\n                    return;\r\n                }\r\n\r\n                let xOffset = 18;\r\n                let yOffset = 10;\r\n\r\n                ctx.font = '8pt Verdana';\r\n                ctx.textBaseline = 'top';\r\n                ctx.fillStyle = style.text;\r\n\r\n                if (value > 100) {\r\n                    xOffset = 24;\r\n                }\r\n\r\n                ctx.fillText(value, x - (xOffset / 2), y - (yOffset / 2));\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n","isMain":true,"fileExtension":"ts","fileHeader":"ts"},{"hasRelativeAssetsUrls":false,"path":"src/app/stacked-column-chart/data-chart-stacked-column-chart.component.html","content":"<div class=\"container sample\">\r\n    <div class=\"options vertical\">\r\n        <span id=\"legendTitle\">Electricity Production from Renewables</span>\r\n        <igx-legend #legend orientation=\"Horizontal\"></igx-legend>\r\n    </div>\r\n    <div class=\"container\">\r\n        <igx-data-chart height=\"100%\" width=\"100%\" isVerticalZoomEnabled=\"false\"\r\n            isHorizontalZoomEnabled=\"false\">\r\n            <igx-category-x-axis #xAxis [dataSource]=\"data\" label=\"Year\" gap=\"0.75\"></igx-category-x-axis>\r\n            <igx-numeric-y-axis #yAxis minimumValue=\"0\" maximumValue=300 title=\"TWh\" titleLeftMargin=10></igx-numeric-y-axis>\r\n\r\n            <igx-stacked-column-series [xAxis]=\"xAxis\" [yAxis]=\"yAxis\" [dataSource]=\"data\" showDefaultTooltip=\"true\"\r\n                areaFillOpacity=\"1\" [legend]=\"legend\">\r\n                <igx-stacked-fragment-series valueMemberPath=\"USA\" title=\"USA\"></igx-stacked-fragment-series>\r\n                <igx-stacked-fragment-series valueMemberPath=\"Europe\" title=\"Europe\"></igx-stacked-fragment-series>\r\n                <igx-stacked-fragment-series valueMemberPath=\"China\" title=\"China\"></igx-stacked-fragment-series>\r\n            </igx-stacked-column-series>\r\n\r\n            <igx-point-series [xAxis]=\"xAxis\" [yAxis]=\"yAxis\" [dataSource]=\"data\" valueMemberPath=\"USAMarker\"\r\n                [markerTemplate]=\"getMarker()\">\r\n            </igx-point-series>\r\n            <igx-point-series [xAxis]=\"xAxis\" [yAxis]=\"yAxis\" [dataSource]=\"data\" valueMemberPath=\"EuropeMarker\"\r\n                [markerTemplate]=\"getMarker()\"></igx-point-series>\r\n            <igx-point-series [xAxis]=\"xAxis\" [yAxis]=\"yAxis\" [dataSource]=\"data\" valueMemberPath=\"ChinaMarker\"\r\n                [markerTemplate]=\"getMarker()\"></igx-point-series>\r\n            <igx-callout-layer [dataSource]=\"calloutDataSource\" xMemberPath=\"X\" yMemberPath=\"Y\" labelMemberPath=\"Label\"\r\n                calloutBackground=\"Transparent\" calloutLeaderBrush=\"Transparent\" calloutTextColor=\"Black\">\r\n            </igx-callout-layer>\r\n        </igx-data-chart>\r\n    </div>\r\n</div>\r\n","isMain":true,"fileExtension":"html","fileHeader":"html"},{"hasRelativeAssetsUrls":false,"path":"src/app/stacked-column-chart/data-chart-stacked-column-chart.component.scss","content":"/* styles are loaded the Shared CSS file located at:\r\nhttps://static.infragistics.com/xplatform/css/samples/\r\n*/\r\n","isMain":true,"fileExtension":"scss","fileHeader":"scss"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { DataChartStackedColumnChartComponent } from \"./stacked-column-chart/data-chart-stacked-column-chart.component\";\r\nimport { \r\n\tIgxDataChartCoreModule,\r\n\tIgxDataChartCategoryModule,\r\n\tIgxDataChartInteractivityModule,\r\n\tIgxLegendModule,\r\n\tIgxDataChartStackedModule,\r\n\tIgxStackedFragmentSeriesModule,\r\n\tIgxDataChartAnnotationModule\r\n } from \"igniteui-angular-charts\";\n\n\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\r\n\tAppComponent,\r\n\tDataChartStackedColumnChartComponent\r\n],\n  imports: [\r\n\tBrowserModule,\r\n\tBrowserAnimationsModule,\r\n\tFormsModule,\r\n\tIgxDataChartCoreModule,\r\n\tIgxDataChartCategoryModule,\r\n\tIgxDataChartInteractivityModule,\r\n\tIgxLegendModule,\r\n\tIgxDataChartStackedModule,\r\n\tIgxStackedFragmentSeriesModule,\r\n\tIgxDataChartAnnotationModule\r\n],\n  providers: [],\n  entryComponents: [],\n  schemas: []\n})\nexport class AppModule {}\n","isMain":true,"fileExtension":"ts","fileHeader":"modules"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-data-chart-stacked-column-chart></app-data-chart-stacked-column-chart>"}],"sampleDependencies":"{\"@angular/animations\":\"10.0.14\",\"@angular/common\":\"10.0.14\",\"@angular/compiler\":\"10.0.14\",\"@angular/core\":\"^10.0.14\",\"@angular/forms\":\"10.0.14\",\"@angular/platform-browser\":\"10.0.14\",\"@angular/platform-browser-dynamic\":\"10.0.14\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.6.2\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"11.1.10\",\"igniteui-angular-charts\":\"11.2.0-beta.0\",\"igniteui-angular-core\":\"11.2.0-beta.0\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.5.4\",\"tslib\":\"1.13.0\",\"web-animations-js\":\"^2.3.2\",\"zone.js\":\"~0.10.2\"}"}