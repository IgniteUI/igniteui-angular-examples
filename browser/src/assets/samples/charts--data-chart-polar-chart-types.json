{"sampleFiles":[{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-polar-series/data-chart-type-polar-series.component.ts","content":"import { Component, OnInit, ViewChild } from \"@angular/core\";\n\n// types of axis:\nimport { IgxNumericAngleAxisComponent } from \"igniteui-angular-charts\";\nimport { IgxNumericRadiusAxisComponent } from \"igniteui-angular-charts\";\n\n// types of polar series:\nimport { IgxPolarAreaSeriesComponent } from \"igniteui-angular-charts\";\nimport { IgxPolarLineSeriesComponent } from \"igniteui-angular-charts\";\nimport { IgxPolarScatterSeriesComponent } from \"igniteui-angular-charts\";\nimport { IgxPolarSplineAreaSeriesComponent } from \"igniteui-angular-charts\";\nimport { IgxPolarSplineSeriesComponent } from \"igniteui-angular-charts\";\n\nimport { IgxDataChartComponent } from \"igniteui-angular-charts\";\nimport { MarkerType } from \"igniteui-angular-charts\";\n\nimport { IgxLegendComponent } from \"igniteui-angular-charts\";\n\nimport { SamplePolarData } from \"../SamplePolarData\";\n\n@Component({\n  selector: \"app-data-chart-type-polar-series\",\n  styleUrls: [\"./data-chart-type-polar-series.component.scss\"],\n  templateUrl: \"./data-chart-type-polar-series.component.html\"\n})\nexport class DataChartTypePolarSeriesComponent implements OnInit {\n\n    @ViewChild(\"chart\", { static: true })\n    public chart: IgxDataChartComponent;\n    @ViewChild(\"angleAxis\", { static: true })\n    public angleAxis: IgxNumericAngleAxisComponent;\n    @ViewChild(\"radiusAxis\", { static: true })\n    public radiusAxis: IgxNumericRadiusAxisComponent;\n    @ViewChild(\"legend\", { static: true })\n    public legend: IgxLegendComponent;\n\n    public data: any[] = SamplePolarData.create();\n\n    constructor() { }\n\n    public ngOnInit() {\n        if (this.chart) {\n            this.chart.legend = this.legend;\n        }\n        this.setSeries(\"Spline\");\n    }\n\n    public onSeriesTypeChanged(e: any) {\n        const selectedSeries = e.target.value.toString();\n        this.setSeries(selectedSeries);\n    }\n\n    public setSeries(seriesType: string) {\n         if (seriesType === \"Area\") {\n            // creating a series with mapping to data columns of wind pattern\n            const series1 = new IgxPolarAreaSeriesComponent();\n            series1.name = \"series1\";\n            series1.angleMemberPath = \"Direction\";\n            series1.radiusMemberPath  = \"BoatSpeed\";\n            series1.radiusAxis = this.radiusAxis;\n            series1.angleAxis = this.angleAxis;\n            const series2 = new IgxPolarAreaSeriesComponent();\n            series2.name = \"series2\";\n            series2.angleMemberPath = \"Direction\";\n            series2.radiusMemberPath  = \"WindSpeed\";\n            series2.radiusAxis = this.radiusAxis;\n            series2.angleAxis = this.angleAxis;\n\n            series1.areaFillOpacity = 1;\n            series2.areaFillOpacity = 1;\n            series1.markerType = MarkerType.Circle;\n            series2.markerType = MarkerType.Circle;\n            series1.title = \"Boat Speed\";\n            series2.title = \"Wind Speed\";\n            this.chart.series.clear();\n            this.chart.series.add(series2);\n            this.chart.series.add(series1);\n\n        } else if (seriesType === \"Spline Area\") {\n            // creating a series with mapping to data columns of wind pattern\n            const series1 = new IgxPolarSplineAreaSeriesComponent();\n            series1.name = \"series1\";\n            series1.angleMemberPath = \"Direction\";\n            series1.radiusMemberPath  = \"BoatSpeed\";\n            series1.radiusAxis = this.radiusAxis;\n            series1.angleAxis = this.angleAxis;\n\n            const series2 = new IgxPolarSplineAreaSeriesComponent();\n            series2.name = \"series2\";\n            series2.angleMemberPath = \"Direction\";\n            series2.radiusMemberPath  = \"WindSpeed\";\n            series2.radiusAxis = this.radiusAxis;\n            series2.angleAxis = this.angleAxis;\n\n            series1.areaFillOpacity = 0.3;\n            series2.areaFillOpacity = 0.3;\n            series1.markerType = MarkerType.Circle;\n            series2.markerType = MarkerType.Circle;\n            series1.title = \"Boat Speed\";\n            series2.title = \"Wind Speed\";\n            this.chart.series.clear();\n            this.chart.series.add(series2);\n            this.chart.series.add(series1);\n\n        } else if (seriesType === \"Spline\") {\n            // creating a series with mapping to data columns of wind pattern\n            const series1 = new IgxPolarSplineSeriesComponent();\n            series1.name = \"series1\";\n            series1.angleMemberPath = \"Direction\";\n            series1.radiusMemberPath  = \"BoatSpeed\";\n            series1.radiusAxis = this.radiusAxis;\n            series1.angleAxis = this.angleAxis;\n            const series2 = new IgxPolarSplineSeriesComponent();\n            series2.name = \"series2\";\n            series2.angleMemberPath = \"Direction\";\n            series2.radiusMemberPath  = \"WindSpeed\";\n            series2.radiusAxis = this.radiusAxis;\n            series2.angleAxis = this.angleAxis;\n\n            series1.markerType = MarkerType.Circle;\n            series2.markerType = MarkerType.Circle;\n            series1.title = \"Boat Speed\";\n            series2.title = \"Wind Speed\";\n            this.chart.series.clear();\n            this.chart.series.add(series2);\n            this.chart.series.add(series1);\n\n        } else if (seriesType === \"Line\") {\n            // creating a series with mapping to data columns of wind pattern\n            const series1 = new IgxPolarLineSeriesComponent();\n            series1.name = \"series1\";\n            series1.angleMemberPath = \"Direction\";\n            series1.radiusMemberPath  = \"BoatSpeed\";\n            series1.radiusAxis = this.radiusAxis;\n            series1.angleAxis = this.angleAxis;\n            const series2 = new IgxPolarLineSeriesComponent();\n            series2.name = \"series2\";\n            series2.angleMemberPath = \"Direction\";\n            series2.radiusMemberPath  = \"WindSpeed\";\n            series2.radiusAxis = this.radiusAxis;\n            series2.angleAxis = this.angleAxis;\n\n            series1.markerType = MarkerType.Circle;\n            series2.markerType = MarkerType.Circle;\n            series1.title = \"Boat Speed\";\n            series2.title = \"Wind Speed\";\n            this.chart.series.clear();\n            this.chart.series.add(series2);\n            this.chart.series.add(series1);\n\n        } else if (seriesType === \"Scatter\") {\n            // creating a series with mapping to data columns of wind pattern\n            const series1 = new IgxPolarScatterSeriesComponent();\n            series1.name = \"series1\";\n            series1.angleMemberPath = \"Direction\";\n            series1.radiusMemberPath  = \"BoatSpeed\";\n            series1.radiusAxis = this.radiusAxis;\n            series1.angleAxis = this.angleAxis;\n            const series2 = new IgxPolarScatterSeriesComponent();\n            series2.name = \"series2\";\n            series2.angleMemberPath = \"Direction\";\n            series2.radiusMemberPath  = \"WindSpeed\";\n            series2.radiusAxis = this.radiusAxis;\n            series2.angleAxis = this.angleAxis;\n\n            series1.markerType = MarkerType.Circle;\n            series2.markerType = MarkerType.Circle;\n            series1.title = \"Boat Speed\";\n            series2.title = \"Wind Speed\";\n            this.chart.series.clear();\n            this.chart.series.add(series2);\n            this.chart.series.add(series1);\n        }\n    }\n\n}\n","isMain":true,"fileExtension":"ts","fileHeader":"ts"},{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-polar-series/data-chart-type-polar-series.component.html","content":"<div class=\"container sample\">\n    <div class=\"options horizontal\">\n        <span class=\"options-label\">Type of Polar Series: </span>\n        <select (change)=\"onSeriesTypeChanged($event)\">\n            <option>Area</option>\n            <option>Spline Area</option>\n            <option selected=\"selected\">Spline</option>\n            <option>Line</option>\n            <option>Scatter</option>\n        </select>\n        <label id=\"legendTitle\">Wind Speed vs. Boat Speed </label>\n        <igx-legend #legend orientation=\"horizontal\"></igx-legend>\n    </div>\n\n    <div class=\"container\">\n        <igx-data-chart #chart\n            isHorizontalZoomEnabled=\"true\"\n            isVerticalZoomEnabled=\"true\"\n            width=\"100%\"\n            height=\"100%\"\n            [dataSource]=\"data\">\n            <igx-numeric-angle-axis #angleAxis name=\"angleAxis\"\n                startAngleOffset=\"-90\"\n                interval=\"30\"\n                minimumValue=\"0\"\n                maximumValue=\"360\"></igx-numeric-angle-axis>\n            <igx-numeric-radius-axis #radiusAxis name=\"radiusAxis\"\n                innerRadiusExtentScale=\"0.1\"\n                radiusExtentScale=\"0.9\"\n                minimumValue=\"0\"\n                maximumValue=\"100\"\n                interval=\"25\"></igx-numeric-radius-axis>\n\n                <!-- series are created in the setSeries function\n                    alternatively, you can create series using this code: -->\n                <!--\n                <igx-polar-area-series\n                    name=\"series1\"\n                    angleMemberPath=\"Direction\"\n                    radiusMemberPath=\"WindSpeed\"\n                    radiusAxisName=\"radiusAxis\"\n                    angleAxisName=\"angleAxis\"></igx-polar-area-series> -->\n        </igx-data-chart>\n\n    </div>\n</div>\n","isMain":true,"fileExtension":"html","fileHeader":"html"},{"hasRelativeAssetsUrls":false,"path":"src/app/data-chart-type-polar-series/data-chart-type-polar-series.component.scss","content":"/* styles are loaded the Shared CSS file located at:\nhttps://static.infragistics.com/xplatform/css/samples/\n*/\n","isMain":true,"fileExtension":"scss","fileHeader":"scss"},{"hasRelativeAssetsUrls":false,"path":"src/app/SamplePolarData.ts","content":"import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class SamplePolarData {\r\n\r\n    public static create(): any[] {\r\n        const data: ISamplePolarItem[] = [\r\n            { Direction: 0,   BoatSpeed: 70,  WindSpeed: 90 },\r\n            { Direction: 45,  BoatSpeed: 35,  WindSpeed: 65 },\r\n            { Direction: 90,  BoatSpeed: 25,  WindSpeed: 45 },\r\n            { Direction: 135, BoatSpeed: 15,  WindSpeed: 25 },\r\n            { Direction: 180, BoatSpeed:  0,  WindSpeed: 0  },\r\n            { Direction: 225, BoatSpeed: 15,  WindSpeed: 25 },\r\n            { Direction: 270, BoatSpeed: 25,  WindSpeed: 45 },\r\n            { Direction: 315, BoatSpeed: 35,  WindSpeed: 65 },\r\n            { Direction: 360, BoatSpeed: 70,  WindSpeed: 90 }\r\n        ];\r\n        return data;\r\n    }\r\n}\r\n\r\ninterface ISamplePolarItem {\r\n    Direction?: number;\r\n    WindSpeed?: number;\r\n    BoatSpeed?: number;\r\n}\r\n"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.module.ts","content":"import { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { AppComponent } from \"./app.component\";\r\nimport { DataChartTypePolarSeriesComponent } from \"./data-chart-type-polar-series/data-chart-type-polar-series.component\";\r\nimport { \r\n\tIgxDataChartCoreModule,\r\n\tIgxLegendModule,\r\n\tIgxDataChartPolarModule,\r\n\tIgxDataChartPolarCoreModule,\r\n\tIgxDataChartInteractivityModule\r\n } from \"igniteui-angular-charts\";\r\nimport { SamplePolarData } from \"./SamplePolarData\";\n\n\n\n@NgModule({\n  bootstrap: [AppComponent],\n  declarations: [\r\n\tAppComponent,\r\n\tDataChartTypePolarSeriesComponent\r\n],\n  imports: [\r\n\tBrowserModule,\r\n\tBrowserAnimationsModule,\r\n\tFormsModule,\r\n\tIgxDataChartCoreModule,\r\n\tIgxLegendModule,\r\n\tIgxDataChartPolarModule,\r\n\tIgxDataChartPolarCoreModule,\r\n\tIgxDataChartInteractivityModule\r\n],\n  providers: [SamplePolarData],\n  entryComponents: [],\n  schemas: []\n})\nexport class AppModule {}\n","isMain":true,"fileExtension":"ts","fileHeader":"modules"},{"hasRelativeAssetsUrls":false,"path":"src/app/app.component.html","content":"<app-data-chart-type-polar-series></app-data-chart-type-polar-series>"}],"sampleDependencies":"{\"@angular/animations\":\"10.0.14\",\"@angular/common\":\"10.0.14\",\"@angular/compiler\":\"10.0.14\",\"@angular/core\":\"^10.0.14\",\"@angular/forms\":\"10.0.14\",\"@angular/platform-browser\":\"10.0.14\",\"@angular/platform-browser-dynamic\":\"10.0.14\",\"@types/hammerjs\":\"^2.0.35\",\"classlist.js\":\"^1.1.20150312\",\"core-js\":\"^2.6.2\",\"hammerjs\":\"^2.0.8\",\"igniteui-angular\":\"11.1.10\",\"igniteui-angular-charts\":\"11.2.0-beta.0\",\"igniteui-angular-core\":\"11.2.0-beta.0\",\"intl\":\"^1.2.5\",\"jszip\":\"^3.1.5\",\"rxjs\":\"^6.5.4\",\"tslib\":\"1.13.0\",\"web-animations-js\":\"^2.3.2\",\"zone.js\":\"~0.10.2\"}"}